services:
  diun:
    image: ghcr.io/crazy-max/diun:4.29.0
    container_name: diun
    volumes:
      - "{{ appdata_path }}/diun/data:/data"
      - "{{ appdata_path }}/diun/config.yml:/diun.yml:ro"
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - UID={{ main_uid }}
      - GID={{ main_gid }}
      - PUID={{ main_uid }}
      - PGID={{ main_gid }}
      - TZ={{ ntp_timezone }}
      - LOG_LEVEL=info
      - LOG_JSON=false
    hostname: cultivation
    restart: always
  bitwarden:
    image: ghcr.io/dani-garcia/vaultwarden:1.33.2
    container_name: bitwarden
    volumes:
      - "{{ appdata_path }}/bitwarden/data:/data"
    ports:
      - 6482:80
    environment:
      - SMTP_HOST={{ secret_snapraid_smtp_host }}
      - SMTP_FROM={{ secret_bitwarden_email }}
      - SMTP_PORT=465
      - SMTP_SSL=true
      - SMTP_EXPLICIT_TLS=true
      - SMTP_USERNAME={{ secret_snapraid_email_address }}
      - SMTP_PASSWORD={{ secret_snapraid_email_pass }}
      - ADMIN_TOKEN={{ secret_bitwarden_token }}
      - WEBSOCKET_ENABLED=false  # Required to use websockets
      - SIGNUPS_ALLOWED=false  # set to false to disable signups
      - LOG_FILE=/data/bitwarden.log
      - LOG_LEVEL=warn
      - EXTENDED_LOGGING=true
      - DATABASE_URL={{ secret_bitwarden_db_url }}
      - ENABLE_DB_WAL=false
      - DOMAIN={{ secret_bitwarden_url }}
    restart: always
  freshrss:
    image: ghcr.io/linuxserver/freshrss:1.25.0
    container_name: freshrss
    volumes:
      - "{{ appdata_path }}/freshrss:/config"
    ports:
      - 8010:80
    environment:
      - UID={{ main_uid }}
      - GID={{ main_gid }}
      - PUID={{ main_uid }}
      - PGID={{ main_gid }}
      - TZ={{ ntp_timezone }}
    restart: always
  code-server:
    image: ghcr.io/linuxserver/code-server:4.96.4
    container_name: code-server
    volumes:
      - "{{ appdata_path }}/code:/config"
    ports:
      - 8443:8443
    environment:
      - UID={{ main_uid }}
      - GID={{ main_gid }}
      - PUID={{ main_uid }}
      - PGID={{ main_gid }}
      - TZ={{ ntp_timezone }}
      - PASSWORD={{ secret_code_server_pass }}
      - SUDO_PASSWORD={{ secret_code_server_pass }}
      - PROXY_DOMAIN=code.{{ secret_personal_url }}
    restart: always
  collabora:
    image: collabora/code:24.04.12.3.1
    container_name: collabora
    privileged: true
    cap_add:
      - MKNOD
    labels:
      - diun.enable=true
      - diun.regopt=docker.io
    ports:
      - 9980:9980
    environment:
      - username=admin
      - password={{ secret_collabora_pw }}
      - domain={{ secret_collabora_url }}
      - dictionaries=en
    mem_limit: 1000M
    restart: always
  paperless-redis:
    image: redis:7.4.2
    container_name: paperless-redis
    restart: always
  paperless:
    image: ghcr.io/paperless-ngx/paperless-ngx:2.14.7
    container_name: paperless
    volumes:
      - "{{ appdata_path }}/paperless/data:/usr/src/paperless/data"
      - "{{ appdata_path }}/paperless/media:/usr/src/paperless/media"
      - "{{ appdata_path }}/paperless/export:/usr/src/paperless/export"
      - "{{ appdata_path }}/paperless/consume:/usr/src/paperless/consume"
    ports:
      - 8000:8000
    environment:
      - PAPERLESS_REDIS=redis://paperless-redis:6379
      - PAPERLESS_TIME_ZONE={{ ntp_timezone }}
      - PAPERLESS_URL=https://paperless.{{ secret_personal_internal_url }}
      - PAPERLESS_SECRET_KEY={{ secret_paperless_key }}
      - PAPERLESS_FILENAME_FORMAT={added_year}/{document_type}/{title}
      - USERMAP_UID={{ main_uid }}
      - USERMAP_GID={{ main_gid }}
    restart: always
  invidious:
    image: quay.io/invidious/invidious:latest
    container_name: invidious
    volumes:
      - "{{ appdata_path }}/invidious:/invidious/config"
    labels:
      - diun.enable=true
      - diun.regopt=docker.io
    ports:
      - 3500:3000
    restart: always
  inv-sig-helper:
    image: quay.io/invidious/inv-sig-helper:latest
    container_name: inv-sig-helper
    cap_drop:
      - ALL
    labels:
      - diun.enable=true
      - diun.regopt=docker.io
    environment:
      - RUST_LOG=info
    command:
      - --tcp
      - 0.0.0.0:12999
    read_only: true
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
  diagrams:
    image: jgraph/drawio:26.0.9
    container_name: diagrams
    ports:
      - 8080:8080
      - 8444:8443
    restart: always
  stirling-pdf:
    image: ghcr.io/stirling-tools/s-pdf:0.41.0
    container_name: stirling-pdf
    volumes:
      - "{{ appdata_path }}/stirlingpdf/extraConfigs:/configs"
    ports:
      - 8081:8080
    environment:
      - DOCKER_ENABLE_SECURITY=false
      - INSTALL_BOOK_AND_ADVANCED_HTML_OPS=false
      - LANGS=en_US
    restart: unless-stopped
  it-tools:
    image: corentinth/it-tools:2024.10.22-7ca5933
    container_name: it-tools
    ports:
      - '8800:80'
    restart: unless-stopped
  ferdium-server:
    image: ghcr.io/ferdium/ferdium-server:2.0.10
    container_name: ferdium-server
    volumes:
      - "{{ appdata_path }}/ferdium/data:/data"
      - "{{ appdata_path }}/ferdium/app:/app/recipes"
    ports:
      - 3333:3333
    environment:
      - NODE_ENV=production
      - APP_URL=https://ferdium.{{ secret_personal_url }}
      - DB_CONNECTION=sqlite
      - SMTP_HOST={{ secret_snapraid_smtp_host }}
      - SMTP_PORT=465
      - MAIL_SSL=true
      - MAIL_USERNAME={{ secret_snapraid_email_address }}
      - MAIL_PASSWORD={{ secret_snapraid_email_pass }}
      - MAIL_SENDER={{ secret_bitwarden_email }}
      - IS_CREATION_ENABLED=true
      - IS_DASHBOARD_ENABLED=true
      - IS_REGISTRATION_ENABLED=false
      - CONNECT_WITH_FRANZ=false
    restart: unless-stopped
  changedetection:
    image: ghcr.io/dgtlmoon/changedetection.io:0.49.1
    container_name: changedetection
    volumes:
      - "{{ appdata_path }}/change:/datastore"
    ports:
      - 5000:5000
    environment:
      - BASE_URL=https://change.{{ secret_personal_url }}
      - PLAYWRIGHT_DRIVER_URL=ws://sockpuppetbrowser:3000
      - HIDE_REFERER=true
    restart: unless-stopped
  sockpuppetbrowser:
    image: dgtlmoon/sockpuppetbrowser:0.0.1
    container_name: sockpuppetbrowser
    restart: unless-stopped
    tmpfs:
      - /tmp
    environment:
      - SCREEN_WIDTH=1920
      - SCREEN_HEIGHT=1024
      - SCREEN_DEPTH=16
      - MAX_CONCURRENT_CHROME_PROCESSES=10
      - STATS_REFRESH_SECONDS=120 # Default is 3 seconds which is way too much
  readeck:
    image: codeberg.org/readeck/readeck:0.17.1
    container_name: readeck
    ports:
      - 8100:8000
    environment:
      - READECK_LOG_LEVEL=info
      - READECK_SERVER_HOST=0.0.0.0
      - READECK_SERVER_PORT=8000
      - READECK_SERVER_PREFIX=/
      - READECK_ALLOWED_HOSTS=readlater.{{ secret_personal_internal_url }}
    volumes:
      - "{{ appdata_path }}/change:/readeck"
    restart: unless-stopped
  crowdsec:
    image: ghcr.io/crowdsecurity/crowdsec:v1.6.5
    container_name: crowdsec
    volumes:
      - "{{ appdata_path }}/crowdsec/data/acquis.yaml:/etc/crowdsec/acquis.yaml"
      - "{{ appdata_path }}/bitwarden/data:/var/log/vaultwarden:ro"
      - "{{ appdata_path }}/crowdsec/db:/var/lib/crowdsec/data/"
    environment:
      - COLLECTIONS=Dominic-Wagner/vaultwarden
      - GID=1000
      - DISABLE_LOCAL_API=true
      - AGENT_USERNAME={{ hostname }}
      - AGENT_PASSWORD={{ secret_crowdsec_cultivation_pw }}
      - LOCAL_API_URL=http://{{ secret_ambition_ip }}:8080
    restart: unless-stopped
  portainer_agent:
    image: portainer/agent:2.26.1
    container_name: portainer_agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    ports:
      - 9001:9001
    environment:
      - AGENT_SECRET={{ secret_portainer_key }}
    restart: always
