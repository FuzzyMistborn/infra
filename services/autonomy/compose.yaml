services:
  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    container_name: homeassistant
    network_mode: host
    volumes:
      - /home/{{ main_username }}/hass:/config
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/Media:/media:ro
    depends_on:
      - mqtt
    restart: unless-stopped
  homeassistant-beta:
    image: ghcr.io/home-assistant/home-assistant:beta
    container_name: homeassistant-beta
    network_mode: host
    volumes:
      - /home/{{ main_username }}/hass_docker_beta:/config
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 5316:5316
    depends_on:
      - mqtt
    restart: unless-stopped
  selenium:
    image: selenium/standalone-firefox:140.0
    container_name: selenium
    ports:
      - 4444:4444
    environment:
      - SE_NODE_MAX_SESSIONS=2
      - TZ={{ ntp_timezone }}
    shm_size: 2g
    restart: unless-stopped
  esphome:
    image: ghcr.io/esphome/esphome:2025.7.2
    container_name: esphome
    network_mode: host
    volumes:
      - "{{ appdata_path }}/esphome:/config"
    restart: unless-stopped
  mqtt:
    image: eclipse-mosquitto:2.0.22
    container_name: MQTT
    volumes:
      - "{{ appdata_path }}/mqtt/config:/mosquitto/config/"
      - "{{ appdata_path }}/mqtt/data:/mosquitto/data/"
      - "{{ appdata_path }}/mqtt/log:/mosquitto/log/"
    ports:
      - 1883:1883
    restart: unless-stopped
  govee2mqtt:
    image: ghcr.io/wez/govee2mqtt:2025.04.13-17d43d72
    container_name: govee2mqtt
    network_mode: host
    environment:
      - TZ={{ ntp_timezone }}
      - RUST_LOG_STYLE=always
      - GOVEE_EMAIL={{ secret_govee_user }}
      - GOVEE_PASSWORD={{ secret_govee_pass }}
      - GOVEE_API_KEY={{ secret_govee_api }}
      - GOVEE_MQTT_HOST=192.168.30.5
      - GOVEE_MQTT_PORT=1883
      - GOVEE_MQTT_USER=homeassistant
      - GOVEE_MQTT_PASSWORD={{ secret_mqtt_pass }}
    restart: unless-stopped
  signal-api:
    image: bbernhard/signal-cli-rest-api:0.93
    container_name: signal-api
    volumes:
      - "{{ appdata_path }}/signal-api:/home/.local/share/signal-cli"
    ports:
      - 8080:8080
    environment:
      - MODE=json-rpc
    restart: unless-stopped
  nodered:
    image: nodered/node-red:4.0.9
    container_name: nodered
    volumes:
      - "{{ appdata_path }}/nodered:/data"
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 1880:1880
    environment:
      - TZ={{ ntp_timezone }}
    depends_on:
      - homeassistant
    restart: unless-stopped
  tasmota:
    image: ghcr.io/tasmoadmin/tasmoadmin:v4.3.0
    container_name: tasmota
    volumes:
      - "{{ appdata_path }}/tasmota:/data"
    ports:
      - 5555:80
    restart: unless-stopped
  anylist:
    image: kevdliu/anylist:latest
    container_name: anylist
    volumes:
      - "{{ appdata_path }}/anylist:/data"
    ports:
      - 9500:9000
    environment:
      - PORT=9000
      - EMAIL={{ secret_email }}
      - PASSWORD={{ secret_anylist_pw }}
    restart: unless-stopped
  music-assistant:
    image: ghcr.io/music-assistant/server:2.5.5
    container_name: music-assistant
    network_mode: host
    privileged: true
    volumes:
      - "{{ appdata_path }}/music-assistant:/data"
    restart: unless-stopped
  piper:
    image: rhasspy/wyoming-piper:1.6.2
    container_name: piper
    volumes:
      - "{{ appdata_path }}/piper:/data"
    ports:
      - 10200:10200
    command: --voice en_US-hfc_female-medium
    restart: unless-stopped
  crowdsec:
    image: ghcr.io/crowdsecurity/crowdsec:v1.6.9
    container_name: crowdsec
    volumes:
      - "{{ appdata_path }}/crowdsec/data/acquis.yaml:/etc/crowdsec/acquis.yaml"
      - /home/{{ main_username }}/hass/:/var/log/homeassistant:ro
      - "{{ appdata_path }}/crowdsec/db:/var/lib/crowdsec/data/"
    environment:
      - COLLECTIONS=crowdsecurity/home-assistant
      - GID=1000
      - DISABLE_LOCAL_API=true
      - AGENT_USERNAME={{ hostname }}
      - AGENT_PASSWORD={{ secret_crowdsec_autonomy_pw }}
      - LOCAL_API_URL=http://{{ secret_ambition_ip }}:8080
    restart: unless-stopped
  portainer_agent:
    image: portainer/agent:2.31.3
    container_name: portainer_agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    ports:
      - 9001:9001
    environment:
      - AGENT_SECRET={{ secret_portainer_key }}
    restart: unless-stopped