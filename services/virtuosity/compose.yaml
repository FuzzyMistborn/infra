services:
  portainer_agent:
    image: portainer/agent:2.27.1
    container_name: portainer_agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    ports:
      - 9001:9001
    environment:
      - AGENT_SECRET={{ secret_portainer_key }}
    restart: always
  ollama-server:
    image: ollama/ollama:0.5.12
    container_name: ollama-server
    volumes:
      - /mnt/llms/ollama:/root/.ollama
    ports:
      - 11434:11434
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities:
                - gpu
    restart: unless-stopped
  open-webui:
    image: ghcr.io/open-webui/open-webui:v0.5.18
    container_name: open-webui
    extra_hosts:
      - host.docker.internal:host-gateway
    volumes:
      - "{{ appdata_path }}/ollama-webui:/app/backend/data"
    ports:
      - 3010:8080
    restart: unless-stopped
  stable-diffusion-webui:
    image: universonic/stable-diffusion-webui:minimal
    container_name: stable-diffusion-webui
    cap_add:
      - NET_BIND_SERVICE
    cap_drop:
      - ALL
    volumes:
      - "{{ appdata_path }}/stable-diffusion/inputs:/app/stable-diffusion-webui/inputs"
      - "{{ appdata_path }}/stable-diffusion/textual_inversion_templates:/app/stable-diffusion-webui/textual_inversion_templates"
      - "{{ appdata_path }}/stable-diffusion/embeddings:/app/stable-diffusion-webui/embeddings"
      - "{{ appdata_path }}/stable-diffusion/extensions:/app/stable-diffusion-webui/extensions"
      - /mnt/llms/stable-diffusion/models:/app/stable-diffusion-webui/models
      - /mnt/llms/stable-diffusion/outputs:/app/stable-diffusion-webui/outputs
      - "{{ appdata_path }}/stable-diffusion/localizations:/app/stable-diffusion-webui/localizations"
    ports:
      - 8080:8080/tcp
    command: --no-half --no-half-vae --precision full --medvram-sdxl --xformers --opt-sdp-attention --opt-sdp-no-mem-attention --opt-split-attention --opt-channelslast
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities:
                - gpu
    restart: unless-stopped
  crowdsec:
    image: ghcr.io/crowdsecurity/crowdsec:v1.6.5
    container_name: crowdsec
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "{{ appdata_path }}/crowdsec/data/acquis.yaml:/etc/crowdsec/acquis.yaml"
      - "{{ appdata_path }}/crowdsec/db:/var/lib/crowdsec/data/"
    environment:
      - COLLECTIONS=gauth-fr/immich
      - GID=1000
      - DISABLE_LOCAL_API=true
      - AGENT_USERNAME={{ hostname }}
      - AGENT_PASSWORD={{ secret_crowdsec_virtuosity_pw }}
      - LOCAL_API_URL=http://{{ secret_ambition_ip }}:8080
    restart: unless-stopped
  immich-server:
    image: ghcr.io/immich-app/immich-server:v1.129.0
    container_name: immich-server
    volumes:
      - /mnt/immich-uploads:/usr/src/app/upload
      - /mnt/photos:/mnt/photos:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 2283:2283
    environment:
      - DB_PASSWORD={{ secret_immich_db_pass }}
      - DB_USERNAME=postgres
      - DB_DATABASE_NAME=immich
      - REDIS_HOSTNAME=immich-redis
      - DB_HOSTNAME=immich-database
    depends_on:
      - immich-redis
      - immich-database
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities:
                - gpu
                - compute
                - video
    restart: unless-stopped
  immich-machine-learning:
    image: ghcr.io/immich-app/immich-machine-learning:v1.128.0-cuda
    container_name: immich_machine_learning
    volumes:
      - "{{ appdata_path }}/immich/model-cache:/cache"
    depends_on:
      - immich-redis
      - immich-database
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities:
                - gpu
    restart: unless-stopped
  immich-redis:
    image: docker.io/redis:6.2-alpine@sha256:905c4ee67b8e0aa955331960d2aa745781e6bd89afc44a8584bfd13bc890f0ae
    container_name: immich_redis
    restart: always
  immich-database:
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    container_name: immich_database
    volumes:
      - "{{ appdata_path }}/immich/database:/var/lib/postgresql/data"
    environment:
      - POSTGRES_PASSWORD={{ secret_immich_db_pass }}
      - POSTGRES_USER=postgres
      - POSTGRES_DB=immich
      - POSTGRES_INITDB_ARGS='--data-checksums'
    command: >-
      postgres
      -c shared_preload_libraries=vectors.so
      -c 'search_path="$$user", public, vectors'
      -c logging_collector=on
      -c max_wal_size=2GB
      -c shared_buffers=512MB
      -c wal_compression=on
    restart: always
  whisper:
    image: lscr.io/linuxserver/faster-whisper:2.4.0-gpu
    container_name: whisper
    environment:
      - UID={{ main_uid }}
      - GID={{ main_gid }}
      - PUID={{ main_uid }}
      - PGID={{ main_gid }}
      - TZ={{ ntp_timezone }}
      - WHISPER_MODEL=base-int8
      - WHISPER_BEAM=5
      - WHISPER_LANG=en
    volumes:
      - "{{ appdata_path }}/whisper:/data"
    ports:
      - 10300:10300
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped
