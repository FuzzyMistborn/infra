---
target_os: ubuntu
hostname: autonomy

### Install packages with grog.package
package_list:
  - name: curl
  - name: git
  - name: htop
  - name: lm-sensors
  - name: net-tools
  - name: fail2ban
  - name: mosquitto-clients
  - name: python
  - name: restic
  - name: rsyslog
  - name: skopeo
  - name: sudo
  - name: wget

### Pip Packages
pip_packages:
  - yamllint
  - thefuck
  - selenium
  - splinter

clone_git: false
pull_backup: false
webhook_user: "{{ main_username }}"

### Bash Aliases
bash_docker: true
bash_autorestic: true
bash_systemctl: true
bash_apt: true

### Telegraf
telegraf_influx_token: "{{ secret_telegraf_autonomy }}"
telegraf_influx_bucket: Autonomy
telegraf_influx_docker: true

### Cronjobs
cronjobs:
  - name: Traffic AM
    job: /usr/local/bin/runitor -uuid {{ secret_hc_autonomy_traffic }} -- /usr/bin/python3 /home/{{ main_username }}/scripts/traffic.py
    user: "{{ main_username }}"
    minute: '*/10'
    hour: 7-8,16-18
    weekday: 1-5
  - name: Traffic PM
    job: /usr/local/bin/runitor -uuid {{ secret_hc_autonomy_traffic }} -- /usr/bin/python3 /home/{{ main_username }}/scripts/traffic.py
    user: "{{ main_username }}"
    minute: '*/30'
    hour: 9-15
    weekday: 1-5
  - name: Docker Version Check
    job: /usr/local/bin/runitor -uuid {{ secret_hc_docker_version_check }} -- bash -c /home/{{ main_username }}/scripts/docker.sh > /dev/null
    user: "{{ main_username }}"
    minute: '*/20'
  - name: NodeRed Github
    job: /usr/local/bin/runitor -uuid {{ secret_hc_autonomy_nr_git }} -- /home/{{ main_username }}/docker/nodered_old/github_cron.sh
    user: "{{ main_username }}"
    minute: 0
    hour: 23
  - name: Restic Prune
    job: /usr/local/bin/runitor -uuid {{ secret_hc_restic_prune_autonomy }} -- /usr/local/bin/autorestic exec -a -- forget --keep-daily 1 --keep-weekly 8 --keep-monthly 4 --prune
#    job: /usr/local/bin/runitor -uuid {{ secret_hc_restic_prune_autonomy }} -- /usr/local/bin/autorestic forget -a -- prune
    user: "{{ main_username }}"
    minute: 0
    hour: 22
    weekday: 1
  - name: Restic Check
    job: /usr/local/bin/runitor -uuid {{ secret_hc_restic_check_autonomy }} -- /usr/local/bin/autorestic exec -a -- check
    user: "{{ main_username }}"
    minute: 0
    hour: 2
    day: 1
  - name: Media Backup
    job: /usr/local/bin/runitor -uuid {{ secret_hc_restic_backup_autonomy }} -- /usr/local/bin/autorestic backup -a -c /home/{{ main_username }}/.autorestic.yml
    user: root
    minute: 0
    hour: 0
  - name: Restart Selenium
    job: docker container restart selenium > /dev/null 2>&1
    user: "{{ main_username }}"
    hour: 4
    minute: 30

### Autorestic Config
autorestic_config_yaml:
  version: 2
  backends:
    synology_docker:
      type: rest
      path: 'http://192.168.30.25:8500/autonomy/docker'
      key: "{{ secret_restic_repo_password }}"
      rest:
        user: "{{ secret_restic_rest_user }}"
        password: "{{ secret_restic_rest_password }}"
    synology_hass_docker:
      type: rest
      path: 'http://192.168.30.25:8500/autonomy/hass_docker'
      key: "{{ secret_restic_repo_password }}"
      rest:
        user: "{{ secret_restic_rest_user }}"
        password: "{{ secret_restic_rest_password }}"
    synology_hass_docker_beta:
      type: rest
      path: 'http://192.168.30.25:8500/autonomy/hass_docker_beta'
      key: "{{ secret_restic_repo_password }}"
      rest:
        user: "{{ secret_restic_rest_user }}"
        password: "{{ secret_restic_rest_password }}"
    b2_docker:
      type: b2
      path: "{{ secret_restic_b2_bucket }}:/autonomy/docker"
      key: "{{ secret_restic_repo_password }}"
      env:
        - B2_ACCOUNT_ID: "{{ secret_restic_b2_account_id }}"
        - B2_ACCOUNT_KEY: "{{ secret_restic_b2_account_key }}"
    b2_hass_docker:
      type: b2
      path: "{{ secret_restic_b2_bucket }}:/autonomy/hass_docker"
      key: "{{ secret_restic_repo_password }}"
      env:
        - B2_ACCOUNT_ID: "{{ secret_restic_b2_account_id }}"
        - B2_ACCOUNT_KEY: "{{ secret_restic_b2_account_key }}"
    b2_hass_docker_beta:
      type: b2
      path: "{{ secret_restic_b2_bucket }}:/autonomy/hass_docker_beta"
      key: "{{ secret_restic_repo_password }}"
      env:
        - B2_ACCOUNT_ID: "{{ secret_restic_b2_account_id }}"
        - B2_ACCOUNT_KEY: "{{ secret_restic_b2_account_key }}"
  locations:
    docker:
      from: '/home/{{ main_username }}/docker'
      to:
        - synology_docker
        - b2_docker
      options:
        forget:
          keep-daily: 1
          keep-weekly: 8
          keep-monthly: 4
    hass_docker:
      from: '/home/{{ main_username }}/hass'
      to:
        - synology_hass_docker
        - b2_hass_docker
      options:
        forget:
          keep-daily: 1
          keep-weekly: 4
          keep-monthly: 2
    hass_docker_beta:
      from: '/home/{{ main_username }}/hass_docker_beta'
      to:
        - synology_hass_docker_beta
        - b2_hass_docker_beta
      options:
        forget:
          keep-daily: 1
          keep-weekly: 4
          keep-monthly: 2

### Docker-Compose with ironicbadger.docker_compose_generator
appdata_path: "/home/{{ main_username }}/docker"
containers:
  ###
  - service_name: hass
    container_name: hass
    active: true
    image: homeassistant/home-assistant:stable
    restart: unless-stopped
    network_mode: host
    volumes:
      - "/home/{{ main_username }}/hass:/config"
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/Media:/media:ro
    depends_on:
      - mqtt
    include_global_env_vars: false
  ###
  - service_name: hass-beta
    container_name: HASS-Beta
    active: true
    image: homeassistant/home-assistant:beta
    restart: unless-stopped
    ports:
      - 5316:5316
    network_mode: host
    volumes:
      - "/home/{{ main_username }}/hass_docker_beta:/config"
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - mqtt
    include_global_env_vars: false
  ###
  - service_name: selenium
    container_name: selenium
    active: true
    image: selenium/standalone-firefox:117.0
    restart: unless-stopped
    ports:
      - 4444:4444
    shm_size: 2g
    environment:
      - SE_NODE_MAX_SESSIONS=2
    include_global_env_vars: false
  ###
  - service_name: esphome
    container_name: esphome
    active: true
    image: esphome/esphome:2023.8.3
    restart: always
    network_mode: host
    volumes:
      - "{{ appdata_path }}/esphome:/config"
    include_global_env_vars: false
  ###
  - service_name: mqtt
    container_name: MQTT
    active: true
    image: eclipse-mosquitto:2.0.17
    restart: always
    ports:
      - 1883:1883
    volumes:
      - "{{ appdata_path }}/mqtt/config:/mosquitto/config/"
      - "{{ appdata_path }}/mqtt/data:/mosquitto/data/"
      - "{{ appdata_path }}/mqtt/log:/mosquitto/log/"
    include_global_env_vars: false
  ###
  - service_name: nodered
    container_name: nodered
    active: true
    image: nodered/node-red:3.1.0
    restart: always
    ports:
      - 1880:1880
    volumes:
      - "{{ appdata_path }}/nodered:/data"
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ={{ ntp_timezone }}
    depends_on:
      - hass
    include_global_env_vars: false
  ###
  - service_name: tasmota
    container_name: tasmota
    active: true
    image: ghcr.io/tasmoadmin/tasmoadmin:v3.1.1
    restart: always
    ports:
      - 5555:80
    volumes:
      - "{{ appdata_path }}/tasmota:/data"
    include_global_env_vars: false
  ###
  - service_name: portainer_agent
    container_name: portainer_agent
    active: true
    image: portainer/agent:2.19.1
    restart: always
    ports:
      - 9001:9001
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    environment:
      - AGENT_SECRET={{ secret_portainer_key }}
    include_global_env_vars: false
