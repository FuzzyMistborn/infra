---
target_os: ubuntu
hostname: invention

### Install packages with grog.package
package_list:
  - name: sudo
  - name: git
  - name: curl
  - name: restic
  - name: wget

### Pip Packages
pip_packages:
  - thefuck

pull_backup: false

### Bash Aliases

bash_docker: true
bash_autorestic: true
bash_systemctl: true
bash_apt: true

### Cronjobs
cronjobs:
  - name: Restic Prune
    job: /usr/local/bin/runitor -uuid {{ secret_hc_restic_prune_invention }} -- /usr/local/bin/autorestic forget -a -- prune
    user: "{{ main_username }}"
    minute: 20
    hour: 22
    weekday: 1
  - name: Restic Check
    job: /usr/local/bin/runitor -uuid {{ secret_hc_restic_check_invention }} -- /usr/local/bin/autorestic exec -a -- check
    user: "{{ main_username }}"
    minute: 20
    hour: 2
    day: 1
  - name: Media Backup
    job: /usr/local/bin/runitor -uuid {{ secret_hc_restic_backup_invention }} -- /usr/local/bin/autorestic backup -a -c /home/{{ main_username }}/.autorestic.yml
    user: root
    minute: 20
    hour: 0

### Autorestic Config
autorestic_config_yaml:
  version: 2
  backends:
    synology_docker:
      type: s3
      path: 'http://192.168.30.25:9000/invention'
      key: "{{ secret_restic_repo_password }}"
      env:
        - AWS_ACCESS_KEY_ID: "{{ secret_minio_s3_access_key_id }}"
        - AWS_SECRET_ACCESS_KEY: "{{ secret_minio_s3_access_key }}"
  locations:
    docker:
      from: '/home/{{ main_username }}/docker'
      to:
        - synology_docker
      options:
        forget:
          keep-daily: 1
          keep-weekly: 4
          keep-monthly: 2

### Docker-Compose with ironicbadger.docker_compose_generator
appdata_path: "/home/{{ main_username }}/docker"
containers:
  ###
  - service_name: diun
    container_name: diun
    active: true
    image: crazymax/diun:4.24.0
    restart: always
    volumes:
      - "{{ appdata_path }}/diun/data:/data"
      - "{{ appdata_path }}/diun/config.yml:/diun.yml:ro"
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - LOG_LEVEL=info
      - LOG_JSON=false
    hostname: "{{ hostname }}"
    include_global_env_vars: true
    ###
  - service_name: portainer_agent
    container_name: portainer_agent
    active: true
    image: portainer/agent:2.18.1
    restart: always
    ports:
      - 9001:9001
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    environment:
      - AGENT_SECRET={{ secret_portainer_key }}
    include_global_env_vars: false
  ###
  - service_name: minecraft
    container_name: minecraft
    active: true
    image: 05jchambers/legendary-minecraft-geyser-floodgate:latest
    restart: unless-stopped
    ports:
      - 25565:25565
      - 19132:19132/udp
      - 19132:19132
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    volumes:
      - "{{ appdata_path }}/minecraft:/minecraft"
    include_global_env_vars: false
