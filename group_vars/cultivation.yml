---
target_os: ubuntu
hostname: cultivation

### Install packages with grog.package
package_list:
  - name: curl
  - name: git
  - name: htop
  - name: lm-sensors
  - name: net-tools
  - name: fail2ban
  - name: python
  - name: restic
  - name: sudo
  - name: wget
  
pull_backup: false

### Docker-Compose with ironicbadger.docker_compose_generator
appdata_path: "/home/{{ main_username }}/docker"
containers:
  ###
  - service_name: diun
    container_name: diun
    active: true
    image: crazymax/diun:latest
    restart: always
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    volumes:
      - "{{ appdata_path }}/diun/data:/data"
      - "{{ appdata_path }}/diun/config.yml:/diun.yml:ro"
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - LOG_LEVEL=info
      - LOG_JSON=false
    hostname:  "{{ hostname }}"
    include_global_env_vars: true
  ###
  - service_name: bitwarden
    container_name: bitwarden
    active: true
    image: vaultwarden/server:latest
    restart: always
    ports:
      - 6482:80
    volumes:
      - "{{ appdata_path }}/bitwarden/data:/data"
    environment:
      - SMTP_HOST={{ secret_snapraid_smtp_host }}
      - SMTP_FROM={{ secret_bitwarden_email }}
      - SMTP_PORT=587
      - SMTP_SSL=true
      - SMTP_USERNAME={{ secret_snapraid_email_address }}
      - SMTP_PASSWORD={{ secret_snapraid_email_pass }}
      - ADMIN_TOKEN={{ secret_bitwarden_token }}
      - WEBSOCKET_ENABLED=true # Required to use websockets
      - SIGNUPS_ALLOWED=false # set to false to disable signups
      - LOG_FILE=/data/bitwarden.log
      - DATABASE_URL={{ secret_bitwarden_db_url }}
      - ENABLE_DB_WAL=false
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    include_global_env_vars: false
  ###
  - service_name: freshrss
    container_name: freshrss
    active: true
    image: linuxserver/freshrss
    restart: always
    ports:
      - 8010:80
    volumes:
      - "{{ appdata_path }}/freshrss:/config"
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    include_global_env_vars: true
  ###
  - service_name: wallabag
    container_name: wallabag
    active: true
    image: wallabag/wallabag
    restart: always
    ports:
      - 300:80
    environment:
      - MYSQL_ROOT_PASSWORD={{ secret_db_root_pass }}
      - SYMFONY__ENV__DATABASE_DRIVER=pdo_mysql
      - SYMFONY__ENV__DATABASE_HOST=192.168.30.14
      - SYMFONY__ENV__DATABASE_PORT=3309
      - SYMFONY__ENV__DATABASE_NAME=symfony
      - SYMFONY__ENV__DATABASE_PASSWORD={{ secret_db_root_pass }}
      - SYMFONY__ENV__FOSUSER_REGISTRATION=false
      - SYMFONY__ENV__FOSUSER_CONFIRMATION=false
      - SYMFONY__ENV__DOMAIN_NAME={{ secret_wallabag_url }}
    volumes:
      - "{{ appdata_path }}/wallabag/images:/var/www/wallabag/web/assets/images"
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    include_global_env_vars: true
  ###
  - service_name: collabora
    container_name: collabora
    active: true
    image: collabora/code
    restart: always
    ports:
      - 9980:9980
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    cap_add:
      - MKNOD
    environment:
      - domain={{ secret_collabora_url }}
    mem_limit: 1000M      
    include_global_env_vars: false
  ###
  - service_name: organizr
    container_name: organizr
    active: true
    image: organizr/organizr:latest
    restart: always
    ports:
      - 5100:80
    volumes:
      - "{{ appdata_path }}/organizr:/config"
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    include_global_env_vars: true
  ###
  - service_name: mailrise
    container_name: mailrise
    active: true
    image: yoryan/mailrise:latest
    restart: always
    ports:
      - 8025:8025
    volumes:
      - "{{ appdata_path }}/mailrise/mailrise.conf:/etc/mailrise.conf"
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    include_global_env_vars: false
  ###
  - service_name: uptime
    container_name: uptime
    active: true
    image: louislam/uptime-kuma:latest
    restart: always
    ports:
      - 3001:3001
    volumes:
      - "{{ appdata_path }}/uptime:/app/data"
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    include_global_env_vars: false
  ###
  - service_name: psitransfer
    container_name: psitransfer
    active: true
    image: psitrax/psitransfer:latest
    restart: always
    ports:
      - 3000:3000
    volumes:
      - "{{ appdata_path }}/psitransfer:/data"
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    environment:
      - PSITRANSFER_ADMIN_PASS={{ secret_psitransfer_pass }}
    include_global_env_vars: false
  ###
  - service_name: paperless-redis
    container_name: paperless-redis
    active: true
    image: redis:6.0
    restart: always
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    include_global_env_vars: false
  ###
  - service_name: paperless
    container_name: paperless
    active: true
    image: jonaswinkler/paperless-ng:latest
    restart: always
    ports:
      - 8000:8000
    volumes:
      - "{{ appdata_path }}/paperless/data:/usr/src/paperless/data"
      - "{{ appdata_path }}/paperless/media:/usr/src/paperless/media"
      - "{{ appdata_path }}/paperless/export:/usr/src/paperless/export"
      - "{{ appdata_path }}/paperless/consume:/usr/src/paperless/consume"
    environment:
      - PAPERLESS_REDIS=redis://paperless-redis:6379
      - PAPERLESS_TIME_ZONE=America/New_York
      - PAPERLESS_SECRET_KEY={{ secret_paperless_key }}
      - USERMAP_UID={{main_uid}}
      - USERMAP_GID={{main_gid}}
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    include_global_env_vars: false
  ###
  - service_name: remote-api
    container_name: remote-api
    active: true
    image: kekru/docker-remote-api-tls:v0.3.0
    restart: always
    ports:
      - 2376:443
    volumes:
      - "{{ appdata_path }}/docker-api:/data/certs"
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
     - CREATE_CERTS_WITH_PW={{ secret_docker_api_tls }}
     - CERT_HOSTNAME=docker-remote.local
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    include_global_env_vars: false
  ###
  - service_name: portainer_agent
    container_name: portainer_agent
    active: true
    image: portainer/agent
    restart: always
    ports:
      - 9001:9001
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    environment:
      - AGENT_SECRET={{secret_portainer_key}}
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    include_global_env_vars: false