---
target_os: ubuntu
hostname: cultivation

### Install packages with grog.package
package_list:
  - name: acl
  - name: curl
  - name: git
  - name: htop
  - name: lm-sensors
  - name: net-tools
  - name: python
  - name: restic
  - name: sudo
  - name: wget

pull_backup: false

### LNXLink
lnxlink_diskuse: true

### Bash Aliases
bash_docker: true
bash_autorestic: true
bash_systemctl: true
bash_apt: true

### Cronjobs
cronjobs:
  - name: Restic Prune
    job: /usr/local/bin/runitor -uuid {{ secret_hc_restic_prune_cultivation }} -- /usr/local/bin/autorestic forget -a -- prune
    user: "{{ main_username }}"
    minute: 15
    hour: 22
    weekday: 1
  - name: Restic Check
    job: /usr/local/bin/runitor -uuid {{ secret_hc_restic_check_cultivation }} -- /usr/local/bin/autorestic exec -a -- check
    user: "{{ main_username }}"
    minute: 15
    hour: 2
    day: 1
  - name: Media Backup
    job: /usr/local/bin/runitor -uuid {{ secret_hc_restic_backup_cultivation }} -- /usr/local/bin/autorestic backup -a -c /home/{{ main_username }}/.autorestic.yml
    user: root
    minute: 15
    hour: 0
  - name: Invidious Reboot
    job: docker container restart invidious > /dev/null 2>&1
    user: "{{ main_username }}"
    minute: 0
    hour: "*/12"

### Autorestic Config
autorestic_config_user: "{{ main_username}}"
autorestic_user_directory: /home/"{{ main_username}}"
autorestic_run_check: false
autorestic_config_yaml:
  version: 2
  backends:
    local_docker:
      type: rest
      path: 'http://192.168.1.5:8500/cultivation'
      key: "{{ secret_restic_repo_password }}"
      rest:
        user: "{{ secret_restic_rest_user }}"
        password: "{{ secret_restic_rest_password }}"
    b2_docker:
      type: b2
      path: "{{ secret_restic_b2_bucket }}:/cultivation"
      key: "{{ secret_restic_repo_password }}"
      env:
        - B2_ACCOUNT_ID: "{{ secret_restic_b2_account_id }}"
        - B2_ACCOUNT_KEY: "{{ secret_restic_b2_account_key }}"
  locations:
    docker:
      from: /home/{{ main_username }}/docker
      to:
        - local_docker
        - b2_docker
      options:
        forget:
          keep-daily: 1
          keep-weekly: 8
          keep-monthly: 4

### Docker-Compose with ironicbadger.docker_compose_generator
appdata_path: "/home/{{ main_username }}/docker"
containers:
  ###
  - service_name: diun
    container_name: diun
    active: true
    image: crazymax/diun:4.28.0
    restart: always
    volumes:
      - "{{ appdata_path }}/diun/data:/data"
      - "{{ appdata_path }}/diun/config.yml:/diun.yml:ro"
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - LOG_LEVEL=info
      - LOG_JSON=false
    hostname: "{{ hostname }}"
    include_global_env_vars: true
  ###
  - service_name: bitwarden
    container_name: bitwarden
    active: true
    image: vaultwarden/server:1.32.0
    restart: always
    ports:
      - 6482:80
    volumes:
      - "{{ appdata_path }}/bitwarden/data:/data"
    environment:
      - SMTP_HOST={{ secret_snapraid_smtp_host }}
      - SMTP_FROM={{ secret_bitwarden_email }}
      - SMTP_PORT=465
      - SMTP_SSL=true
      - SMTP_EXPLICIT_TLS=true
      - SMTP_USERNAME={{ secret_snapraid_email_address }}
      - SMTP_PASSWORD={{ secret_snapraid_email_pass }}
      - ADMIN_TOKEN={{ secret_bitwarden_token }}
      - WEBSOCKET_ENABLED=false  # Required to use websockets
      - SIGNUPS_ALLOWED=false  # set to false to disable signups
      - LOG_FILE=/data/bitwarden.log
      - LOG_LEVEL=warn
      - EXTENDED_LOGGING=true
      - DATABASE_URL={{ secret_bitwarden_db_url }}
      - ENABLE_DB_WAL=false
      - DOMAIN={{ secret_bitwarden_url }}
    include_global_env_vars: false
  ###
  - service_name: freshrss
    container_name: freshrss
    active: true
    image: ghcr.io/linuxserver/freshrss:1.24.1
    restart: always
    ports:
      - 8010:80
    volumes:
      - "{{ appdata_path }}/freshrss:/config"
    include_global_env_vars: true
  ###
  - service_name: code-server
    container_name: code-server
    active: true
    image: ghcr.io/linuxserver/code-server:4.92.2
    restart: always
    ports:
      - 8443:8443
    volumes:
      - "{{ appdata_path }}/code:/config"
    environment:
      - PASSWORD={{ secret_code_server_pass }}
      - SUDO_PASSWORD={{ secret_code_server_pass }}
      - PROXY_DOMAIN=code.{{ secret_personal_url }}
    include_global_env_vars: true
  ###
  - service_name: wallabag
    container_name: wallabag
    active: true
    image: wallabag/wallabag:2.6.9
    restart: always
    ports:
      - 300:80
    environment:
      - MYSQL_ROOT_PASSWORD={{ secret_db_root_pass }}
      - SYMFONY__ENV__DATABASE_DRIVER=pdo_mysql
      - SYMFONY__ENV__DATABASE_HOST=192.168.50.22
      - SYMFONY__ENV__DATABASE_PORT=3309
      - SYMFONY__ENV__DATABASE_NAME=symfony
      - SYMFONY__ENV__DATABASE_PASSWORD={{ secret_db_root_pass }}
      - SYMFONY__ENV__FOSUSER_REGISTRATION=false
      - SYMFONY__ENV__FOSUSER_CONFIRMATION=false
      - SYMFONY__ENV__DOMAIN_NAME={{ secret_wallabag_url }}
      - SYMFONY__ENV__TWOFACTOR_AUTH=true
    volumes:
      - "{{ appdata_path }}/wallabag/images:/var/www/wallabag/web/assets/images"
    include_global_env_vars: true
  ###
  - service_name: collabora
    container_name: collabora
    active: true
    image: collabora/code:24.04.6.1.1
    restart: always
    privileged: true
    ports:
      - 9980:9980
    cap_add:
      - MKNOD
    environment:
      - username=admin
      - password={{ secret_collabora_pw }}
      - domain={{ secret_collabora_url }}
      - dictionaries=en
    mem_limit: 1000M
    include_global_env_vars: false
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
  ###
  - service_name: paperless-redis
    container_name: paperless-redis
    active: true
    image: redis:7.4.0
    restart: always
    include_global_env_vars: false
  ###
  - service_name: paperless
    container_name: paperless
    active: true
    image: ghcr.io/paperless-ngx/paperless-ngx:2.11.4
    restart: always
    ports:
      - 8000:8000
    volumes:
      - "{{ appdata_path }}/paperless/data:/usr/src/paperless/data"
      - "{{ appdata_path }}/paperless/media:/usr/src/paperless/media"
      - "{{ appdata_path }}/paperless/export:/usr/src/paperless/export"
      - "{{ appdata_path }}/paperless/consume:/usr/src/paperless/consume"
    environment:
      - PAPERLESS_REDIS=redis://paperless-redis:6379
      - PAPERLESS_TIME_ZONE=America/New_York
      - PAPERLESS_URL=https://paperless.{{ secret_personal_internal_url }}
      - PAPERLESS_SECRET_KEY={{ secret_paperless_key }}
      - PAPERLESS_FILENAME_FORMAT={added_year}/{document_type}/{title}
      - USERMAP_UID={{ main_uid }}
      - USERMAP_GID={{ main_gid }}
    include_global_env_vars: false
  ###
  - service_name: invidious
    container_name: invidious
    active: true
    image: quay.io/invidious/invidious:latest
    restart: always
    ports:
      - 3500:3000
    volumes:
      - "{{ appdata_path }}/invidious:/invidious/config"
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    include_global_env_vars: false
  ###
  - service_name: diagrams
    container_name: diagrams
    active: true
    image: jgraph/drawio:24.7.5
    restart: always
    ports:
      - 8080:8080
      - 8444:8443
    include_global_env_vars: false
  ###
  - service_name: whoogle
    container_name: whoogle
    active: true
    image: ghcr.io/benbusby/whoogle-search:0.8.4
    restart: always
    mem_limit: 300M
    ports:
      - 5100:5000
    security_opt:
      - no-new-privileges
    cap_drop:
      - ALL
    tmpfs:
      - /config/:size=10M,uid=927,gid=927,mode=1700
    environment:
      - WHOOGLE_ALT_YT=video.{{ secret_personal_url }}
      - WHOOGLE_CONFIG_BLOCK=pinterest.com
      - WHOOGLE_CONFIG_ALTS=1
    include_global_env_vars: false
  ###
  - service_name: spoolman
    container_name: spoolman
    active: true
    image: ghcr.io/donkie/spoolman:0.19.3
    restart: unless-stopped
    volumes:
      - "{{ appdata_path }}/spoolman:/home/app/.local/share/spoolman"
    ports:
      - 7912:8000
    environment:
      - "TZ={{ ntp_timezone }}"
    include_global_env_vars: false
  ###
  - service_name: stirling-pdf
    container_name: stirling-pdf
    active: true
    image: frooodle/s-pdf:0.27.0
    restart: unless-stopped
    volumes:
      - "{{ appdata_path }}/stirlingpdf/extraConfigs:/configs"
    ports:
      - 8081:8080
    environment:
      - DOCKER_ENABLE_SECURITY=false
      - INSTALL_BOOK_AND_ADVANCED_HTML_OPS=false
      - LANGS=en_US
    include_global_env_vars: false
  ###
  - service_name: ferdium-server
    container_name: ferdium-server
    active: true
    image: ferdium/ferdium-server:2.0.6
    restart: unless-stopped
    ports:
      - 3333:3333
    volumes:
      - "{{ appdata_path }}/ferdium/data:/data"
      - "{{ appdata_path }}/ferdium/app:/app/recipes"
    environment:
      - NODE_ENV=development
      - APP_URL=https://ferdium.{{ secret_personal_url }}
      - DB_CONNECTION=sqlite
      - SMTP_HOST={{ secret_snapraid_smtp_host }}
      - SMTP_PORT=465
      - MAIL_SSL=true
      - MAIL_USERNAME={{ secret_snapraid_email_address }}
      - MAIL_PASSWORD={{ secret_snapraid_email_pass }}
      - MAIL_SENDER={{ secret_bitwarden_email }}
      - IS_CREATION_ENABLED=true
      - IS_DASHBOARD_ENABLED=true
      - IS_REGISTRATION_ENABLED=false
      - CONNECT_WITH_FRANZ=false
    include_global_env_vars: false
  ###
  - service_name: changedetection
    container_name: changedetection
    active: true
    image: ghcr.io/dgtlmoon/changedetection.io:0.46.02
    restart: unless-stopped
    ports:
      - 5000:5000
    environment:
      - BASE_URL=https://change.{{ secret_personal_url }}
      - PLAYWRIGHT_DRIVER_URL=ws://playwright:3000/?stealth=1&--disable-web-security=true
    volumes:
      - "{{ appdata_path }}/change:/datastore"
    include_global_env_vars: false
  ###
  - service_name: playwright
    container_name: playwright
    active: true
    image: browserless/chrome:1.61.1-chrome-stable
    restart: unless-stopped
    environment:
      - SCREEN_WIDTH=1920
      - SCREEN_HEIGHT=1024
      - SCREEN_DEPTH=16
      - ENABLE_DEBUGGER=false
      - PREBOOT_CHROME=true
      - CONNECTION_TIMEOUT=300000
      - MAX_CONCURRENT_SESSIONS=10
      - CHROME_REFRESH_TIME=600000
      - DEFAULT_BLOCK_ADS=true
      - DEFAULT_STEALTH=true
      - DEFAULT_IGNORE_HTTPS_ERRORS=true
    volumes:
      - "{{ appdata_path }}/change:/datastore"
    include_global_env_vars: false
  ###
  - service_name: crowdsec
    container_name: crowdsec
    active: true
    image: crowdsecurity/crowdsec:v1.6.2
    restart: unless-stopped
    volumes:
      - "{{ appdata_path }}/crowdsec/data/acquis.yaml:/etc/crowdsec/acquis.yaml"
      - "{{ appdata_path }}/bitwarden/data:/var/log/vaultwarden:ro"
      - "{{ appdata_path }}/crowdsec/db:/var/lib/crowdsec/data/"
    environment:
      - COLLECTIONS=Dominic-Wagner/vaultwarden
      - GID=1000
      - DISABLE_LOCAL_API=true
      - AGENT_USERNAME={{ hostname }}
      - AGENT_PASSWORD={{ secret_crowdsec_cultivation_pw }}
      - LOCAL_API_URL=http://{{ secret_ambition_ip }}:8080
    include_global_env_vars: false
  ###
  - service_name: docker-proxy
    container_name: docker-proxy
    active: true
    image: tecnativa/docker-socket-proxy:0.2.0
    restart: always
    ports:
      - 2375:2375
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - LOG_LEVEL=err
      - BUILD=1
      - COMMIT=1
      - CONFIGS=1
      - CONTAINERS=1
      - DISTRIBUTION=1
      - EXEC=1
      - IMAGES=1
      - INFO=1
      - NETWORKS=1
      - NODES=1
      - PLUGINS=1
      - SERVICES=1
      - SESSSION=1
      - POST=1
    include_global_env_vars: false
  ###
  - service_name: portainer_agent
    container_name: portainer_agent
    active: true
    image: portainer/agent:2.20.3
    restart: always
    ports:
      - 9001:9001
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    environment:
      - AGENT_SECRET={{ secret_portainer_key }}
    include_global_env_vars: false
