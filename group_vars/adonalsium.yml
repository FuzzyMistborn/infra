---
adonalsium_ip: 192.168.30.10
hostname: adonalsium

### Install packages with grog.package
package_list:
  - name: pve-headers
  - name: git
  - name: nut
  - name: fail2ban
  - name: ifupdown2
  - name: restic
  - name: rsyslog
  - name: ntfs-3g
  - name: wireguard

mergerfs_mount:
  - {path: /mnt/Media}

parity_disks:
  - {path: /mnt/parity1, source: /dev/disk/by-id/ata-ST8000NM0055-1RM112_ZA11KJXC-part1, fs: ext4, opts: defaults, content: false}

data_disks:
  - {path: /mnt/disk1, source: /dev/disk/by-id/ata-ST8000NM0055-1RM112_ZA11KKDB-part1, fs: ext4, opts: defaults, content: true}
  - {path: /mnt/disk2, source: /dev/disk/by-id/ata-ST8000NM0055-1RM112_ZA11KW0F-part1, fs: ext4, opts: defaults, content: true}
  - {path: /mnt/disk3, source: /dev/disk/by-id/ata-ST8000NM0055-1RM112_ZA11KW4B-part1, fs: ext4, opts: defaults, content: true}
  - {path: /mnt/disk4, source: /dev/disk/by-id/ata-ST4000NM0024-1HT178_Z4F06WRN-part1, fs: ext4, opts: defaults, content: true}
  - {path: /mnt/disk5, source: /dev/disk/by-id/ata-WDC_WD60EFRX-68MYMN1_WD-WX21D25R5VX9-part1, fs: ext4, opts: defaults, content: true}
  - {path: /mnt/disk6, source: /dev/disk/by-id/ata-WDC_WD60EFRX-68MYMN1_WD-WX31D25040NC-part1, fs: ext4, opts: defaults, content: true}

fstab_mergerfs:
  - {source: "/mnt/disk*", mountpoint: "/mnt/Media", fs: fuse.mergerfs, opts: "direct_io,defaults,allow_other,minfreespace=50G,fsname=mergerfs"}

nfs_mount:
  - {path: /mnt/synology_backup, source: 192.168.30.25:/volume1/Backup/, fs: nfs, opts: defaults, content: false}
  - {path: /mnt/synology_minio, source: 192.168.30.25:/volume1/Minio/, fs: nfs, opts: defaults, content: false}

### Variables
install_nut: false
pull_backup: false
infrastructure: false
# mergerfs_force_install: true
# mergerfs_ver: 2.32.4
# nag_force_install: true
# nag_ver: 0.0.7

### Cronjobs
cronjobs:
  - name: Scrutiny
    job: /usr/local/bin/runitor -uuid {{secret_hc_adonalsium_scrutiny}} -- docker exec scrutiny /scrutiny/bin/scrutiny-collector-metrics run > /dev/null 2>&1
    user: "{{ main_username }}"
    minute: 0
    hour: '*/6'
  - name: Restart Jellyfin
    job: docker container restart jellyfin > /dev/null 2>&1
    user: "{{ main_username }}"
    hour: 2
    minute: 30
  - name: Restic Prune
    job: /usr/local/bin/runitor -uuid {{secret_hc_adonalsium_purge}} -- /usr/local/bin/autorestic forget -a -- prune
    user: "{{ main_username }}"
    minute: 0
    hour: 1
    weekday: 1
  - name: Restic Check
    job: /usr/local/bin/runitor -uuid {{secret_hc_restic_check_adonalsium}} -- /usr/local/bin/autorestic check
    user: "{{ main_username }}"
    minute: 0
    hour: 3
    day: 1
  - name: Media Backup (Docker)
    job: /usr/local/bin/runitor -uuid {{secret_hc_adonalsium_media_docker}} -- /usr/local/bin/autorestic backup -l docker -c /home/{{main_username}}/.autorestic.yml
    user: root
    minute: 45
    hour: 23
  - name: Media Backup (Everything Else)
    job: /usr/local/bin/runitor -uuid {{secret_hc_adonalsium_media_all}} -- /usr/local/bin/autorestic backup -l photos -l files -l music -l audiobooks -c /home/{{main_username}}/.autorestic.yml
    user: root
    minute: 15
    hour: 1
    weekday: 0,3,5

### Snapraid Config
snapraid_force_install: false
snapraid_install: false
snapraid_runner: false
snapraid_bin_path: /usr/bin/snapraid
snapraid_runner_email_address_from: "{{ secret_snapraid_email_from }}"
snapraid_runner_email_address_to: "{{ secret_snapraid_email_to }}"
snapraid_runner_smtp_host: "{{ secret_snapraid_smtp_host }}"
snapraid_runner_smtp_port: 8025
snapraid_runner_use_ssl: false
snapraid_runner_touch: false
snapraid_runner_command: "python3 {{ snapraid_run_bin }} -c {{ snapraid_run_conf}}"
snapraid_runner_cron_jobs:
  - {job: '/usr/local/bin/runitor -uuid {{secret_hc_adonalsium_snapraid}} -- {{ snapraid_run_command }}', name: 'snapraid_runner', weekday: '*', hour: '04'}
snapraid_config_excludes:
  - "*.unrecoverable"
  - "/tmp/"
  - "/lost+found/"
  - "downloads/"
  - "appdata/"
  - "*.!sync"
  - ".AppleDouble"
  - "._AppleDouble"
  - ".DS_Store"
  - "._.DS_Store"
  - ".Thumbs.db"
  - ".fseventsd"
  - ".Spotlight-V100"
  - ".TemporaryItems"
  - ".AppleDB"
  - ".Trash*"

### Docker-Compose with ironicbadger.docker_compose_generator
appdata_path: "/home/{{ main_username }}/docker"
containers:
  ###
  - service_name: diun
    container_name: diun
    active: true
    image: crazymax/diun:latest
    restart: always
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    volumes:
      - "{{ appdata_path }}/diun/data:/data"
      - "{{ appdata_path }}/diun/config.yml:/diun.yml:ro"
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - LOG_LEVEL=info
      - LOG_JSON=false
    hostname: "{{ hostname }}"
    include_global_env_vars: true
  ###
  - service_name: remote-api
    container_name: remote-api
    active: true
    image: kekru/docker-remote-api-tls:v0.3.0
    restart: always
    ports:
      - 2376:443
    volumes:
      - "{{ appdata_path }}/docker-api:/data/certs"
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - CREATE_CERTS_WITH_PW={{ secret_docker_api_tls }}
      - CERT_HOSTNAME=docker-remote.local
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    include_global_env_vars: false
  ###
  - service_name: portainer
    container_name: portainer
    active: true
    image: portainer/portainer-ce
    restart: always
    mem_limit: 200M
    ports:
      - 9000:9000
      - 8000:8000
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    volumes:
      - /srv/docker/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - AGENT_SECRET={{secret_portainer_key}}
    include_global_env_vars: false
  ###
  - service_name: jellyfin
    container_name: jellyfin
    active: true
    image: ghcr.io/linuxserver/jellyfin:latest
    restart: always
    ports:
      - 8096:8096
    labels:
      - "diun.enable=true"
      - "diun.regopt=ghcr.io"
    volumes:
      - "{{ appdata_path }}/jellyfin/config:/config"
      - /mnt/Media/Movies:/mnt/movies
      - /mnt/Media/UHD:/mnt/UHD
      - '/mnt/Media/TV Shows:/mnt/tv'
      - '/mnt/Media/Kids Movies:/mnt/kids'
      - '/mnt/Media/Kids TV:/mnt/kids_tv'
      - '/mnt/Media/YouTube/Kids:/mnt/kids_youtube'
      - '/mnt/Media/Parents Movies:/mnt/parents_movies'
      - '/mnt/Media/Parents TV:/mnt/parents_tv'
      - '/mnt/Media/Family Videos:/mnt/home_videos'
    devices:
      - /dev/dri:/dev/dri
    group_add:
      - 108
    include_global_env_vars: true
  ###
  - service_name: handbrake
    container_name: handbrake
    active: true
    image: jlesage/handbrake
    restart: always
    ports:
      - 5800:5800
    volumes:
      - "{{ appdata_path }}/docker-api:/data/certs"
      - "{{ appdata_path }}/handbrake/config:/config"
      - "{{ appdata_path }}/handbrake/storage:/storage"
      - "{{ appdata_path }}/handbrake/watch:/watch"
      - "{{ appdata_path }}/handbrake/output:/output"
    devices:
      - /dev/dri:/dev/dri
    environment:
      - TZ={{ ntp_timezone }}
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    include_global_env_vars: false
  ###
  - service_name: scrutiny
    container_name: scrutiny
    active: true
    image: analogj/scrutiny
    restart: always
    privileged: true
    ports:
      - 8080:8080
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    volumes:
      - "{{ appdata_path }}/scrutiny:/scrutiny/config"
      - /run/udev:/run/udev:ro
    devices:
      ### THIS IS LIKELY UNNCESSARY WITH THE PRIVILEGED FLAG
      # - /dev/sda:/dev/sda # SSD for later
      - /dev/sdb:/dev/sdb
      - /dev/sdc:/dev/sdc
      - /dev/sdd:/dev/sdd
      - /dev/sde:/dev/sde
      - /dev/sdf:/dev/sdf
      - /dev/sdg:/dev/sdg
      - /dev/sdh:/dev/sdh
      - /dev/nvme0n1:/dev/nvme
    cap_add:
      - SYS_RAWIO
      - SYS_ADMIN
    include_global_env_vars: false
