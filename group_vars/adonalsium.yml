---
adonalsium_ip: 192.168.30.10
hostname: adonalsium

### Install packages with grog.package
package_list:
  - name: pve-headers
  - name: git
  - name: nut
  - name: fail2ban
  - name: ifupdown2
  - name: restic

mergerfs_mount:
  - { path: /mnt/Media }

parity_disks:
  - { path: /mnt/parity1, source: /dev/disk/by-id/ata-ST8000NM0055-1RM112_ZA11KJXC-part1, fs: ext4, opts: defaults, content: false }

data_disks:
  - { path: /mnt/disk1, source: /dev/disk/by-id/ata-ST8000NM0055-1RM112_ZA11KKDB-part1, fs: ext4, opts: defaults, content: true }
  - { path: /mnt/disk2, source: /dev/disk/by-id/ata-ST8000NM0055-1RM112_ZA11KW0F-part1, fs: ext4, opts: defaults, content: true }
  - { path: /mnt/disk3, source: /dev/disk/by-id/ata-ST8000NM0055-1RM112_ZA11KW4B-part1, fs: ext4, opts: defaults, content: true }
  - { path: /mnt/disk4, source: /dev/disk/by-id/ata-ST4000NM0024-1HT178_Z4F06WRN-part1, fs: ext4, opts: defaults, content: true }
  - { path: /mnt/disk5, source: /dev/disk/by-id/ata-WDC_WD60EFRX-68MYMN1_WD-WX21D25R5VX9-part1, fs: ext4, opts: defaults, content: true }
  - { path: /mnt/disk6, source: /dev/disk/by-id/ata-WDC_WD60EFRX-68MYMN1_WD-WX31D25040NC-part1, fs: ext4, opts: defaults, content: true }

fstab_mergerfs:
  - { source: "/mnt/disk*", mountpoint: "/mnt/Media", fs: fuse.mergerfs, opts: "direct_io,defaults,allow_other,minfreespace=50G,fsname=mergerfs" }  

### Variables
install_nut: false
pull_backup: false
infrastructure: false
install_wireguard: false
mergerfs_ver: 2.32.4

### Snapraid Config
snapraid_force_install: false
snapraid_email_address: "{{ secret_snapraid_email_address }}" 
snapraid_gmail_pass: "{{ secret_snapraid_email_pass }}"
snapraid_email_address_from: "{{ secret_snapraid_email_from }}"
snapraid_email_address_to: "{{ secret_snapraid_email_to }}"
snapraid_smtp_host: "{{ secret_snapraid_smtp_host }}"
snapraid_smtp_port: 465
snapraid_use_ssl: true
snapraid_touch: false
snapraid_run_command: "python3 {{ snapraid_run_bin }} -c {{ snapraid_run_conf}} && curl -fsS -m 10 --retry 5 -o /dev/null {{secret_hc_adonalsium_snapraid}}"
snapraid_cron_jobs:
  - { job: '{{ snapraid_run_command }}', name: 'snapraid_runner', weekday: '*', hour: '04' }
snapraid_config_excludes:
  - "*.unrecoverable"
  - "/tmp/"
  - "/lost+found/"
  - "downloads/"
  - "appdata/"
  - "*.!sync"
  - ".AppleDouble"
  - "._AppleDouble"
  - ".DS_Store"
  - "._.DS_Store"
  - ".Thumbs.db"
  - ".fseventsd"
  - ".Spotlight-V100"
  - ".TemporaryItems"
  - ".Trashes"
  - ".AppleDB"

### Docker-Compose with ironicbadger.docker_compose_generator
appdata_path: "/home/{{ main_username }}/docker"
containers:
  ###
  - service_name: diun
    container_name: diun
    active: true
    image: crazymax/diun:latest
    restart: always
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    volumes:
      - "{{ appdata_path }}/diun/data:/data"
      - "{{ appdata_path }}/diun/config.yml:/diun.yml:ro"
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - LOG_LEVEL=info
      - LOG_JSON=false
    hostname:  "{{ hostname }}"
    include_global_env_vars: true
  ###
  - service_name: remote-api
    container_name: remote-api
    active: true
    image: kekru/docker-remote-api-tls:v0.3.0
    restart: always
    ports:
      - 2376:443
    volumes:
      - "{{ appdata_path }}/docker-api:/data/certs"
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
     - CREATE_CERTS_WITH_PW={{ secret_docker_api_tls }}
     - CERT_HOSTNAME=docker-remote.local
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    include_global_env_vars: false
  ###
  - service_name: portainer
    container_name: portainer
    active: true
    image: portainer/portainer-ce
    restart: always
    mem_limit: 200M
    ports:
      - 9000:9000
      - 8000:8000
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    volumes:
      - /srv/docker/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - AGENT_SECRET={{secret_portainer_key}}
    include_global_env_vars: false
  ###
  - service_name: jellyfin
    container_name: jellyfin
    active: true
    image: linuxserver/jellyfin
    restart: always
    ports:
      - 8096:8096
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    volumes:
      - "{{ appdata_path }}/jellyfin/config:/config"
      - /mnt/Media/Movies:/mnt/movies
      - /mnt/Media/UHD:/mnt/UHD
      - '/mnt/Media/TV Shows:/mnt/tv'
      - '/mnt/Media/Kids Movies:/mnt/kids'
      - '/mnt/Media/Kids TV:/mnt/kids_tv'
      - '/mnt/Media/YouTube/Kids:/mnt/kids_youtube'
      - '/mnt/Media/Parents Movies:/mnt/parents_movies'
      - '/mnt/Media/Parents TV:/mnt/parents_tv'
      - '/mnt/Media/Family Videos:/mnt/home_videos'
    devices:
      - /dev/dri:/dev/dri
    group_add:
      - 108
    include_global_env_vars: true
  ###
  - service_name: handbrake
    container_name: handbrake
    active: true
    image: jlesage/handbrake
    restart: always
    ports:
      - 5800:5800
    volumes:
      - "{{ appdata_path }}/docker-api:/data/certs"
      - "{{ appdata_path }}/handbrake/config:/config"
      - "{{ appdata_path }}/handbrake/storage:/storage"
      - "{{ appdata_path }}/handbrake/watch:/watch"
      - "{{ appdata_path }}/handbrake/output:/output"
    devices:
      - /dev/dri:/dev/dri
    environment:
      - TZ={{ ntp_timezone }}
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    include_global_env_vars: false
  ###
  - service_name: scrutiny
    container_name: scrutiny
    active: true
    image: analogj/scrutiny
    restart: always
    privileged: true
    ports:
      - 8080:8080
    labels:
      - "diun.enable=true"
      - "diun.regopt=docker.io"
    volumes:
      - "{{ appdata_path }}/scrutiny:/scrutiny/config"
      - /run/udev:/run/udev:ro
    devices:
##### THIS IS LIKELY UNNCESSARY WITH THE PRIVILEGED FLAG
#      - /dev/sda:/dev/sda # SSD for later
      - /dev/sdb:/dev/sdb
      - /dev/sdc:/dev/sdc
      - /dev/sdd:/dev/sdd
      - /dev/sde:/dev/sde
      - /dev/sdf:/dev/sdf
      - /dev/sdg:/dev/sdg
      - /dev/sdh:/dev/sdh
      - /dev/nvme0n1:/dev/nvme
    cap_add:
      - SYS_RAWIO
      - SYS_ADMIN
    include_global_env_vars: false