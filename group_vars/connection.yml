---
target_os: ubuntu
hostname: connection

### Install packages with grog.package
package_list:
  - name: sudo
  - name: git
  - name: curl
  - name: restic
  - name: wget

pull_backup: false

### Bash Aliases

bash_docker: true
bash_autorestic: true
bash_systemctl: true
bash_apt: true

### Cronjobs
cronjobs:
  - name: Restic Prune
    job: /usr/local/bin/runitor -uuid {{ secret_hc_restic_prune_connection }} -- /usr/local/bin/autorestic forget -a -- prune
    user: "{{ main_username }}"
    minute: 20
    hour: 22
    weekday: 1
  - name: Restic Check
    job: /usr/local/bin/runitor -uuid {{ secret_hc_restic_check_connection }} -- /usr/local/bin/autorestic exec -a -- check
    user: "{{ main_username }}"
    minute: 20
    hour: 2
    day: 1
  - name: Media Backup
    job: /usr/local/bin/runitor -uuid {{ secret_hc_restic_backup_connection }} -- /usr/local/bin/autorestic backup -a -c /home/{{ main_username }}/.autorestic.yml
    user: root
    minute: 20
    hour: 0

### Autorestic Config
autorestic_config_user: "{{ main_username}}"
autorestic_user_directory: /home/"{{ main_username}}"
autorestic_run_check: false
autorestic_config_yaml:
  version: 2
  backends:
    local_docker:
      type: rest
      path: 'http://192.168.1.5:8500/connection'
      key: "{{ secret_restic_repo_password }}"
      rest:
        user: "{{ secret_restic_rest_user }}"
        password: "{{ secret_restic_rest_password }}"
  locations:
    docker:
      from: '/home/{{ main_username }}/docker'
      to:
        - local_docker
      options:
        forget:
          keep-daily: 1
          keep-weekly: 4
          keep-monthly: 2

### Docker-Compose with ironicbadger.docker_compose_generator
appdata_path: "/home/{{ main_username }}/docker"
containers:
  ###
  - service_name: portainer_agent
    container_name: portainer_agent
    active: true
    image: portainer/agent:2.20.3
    restart: always
    ports:
      - 9001:9001
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    environment:
      - AGENT_SECRET={{ secret_portainer_key }}
    include_global_env_vars: false
  ###
  - service_name: synapse
    container_name: synapse
    active: true
    image: matrixdotorg/synapse:v1.110.0
    restart: unless-stopped
    ports:
      - 8008:8008
    volumes:
      - "{{ appdata_path }}/synapse:/data"
    environment:
      - SYNAPSE_CONFIG_PATH=/data/homeserver.yaml
    include_global_env_vars: false
  ###
  - service_name: cinny
    container_name: cinny
    active: true
    image: ajbura/cinny:v3.2.0
    restart: unless-stopped
    ports:
      - 3000:80
    volumes:
      - "{{ appdata_path }}/cinny/config.json:/app/config.json"
    include_global_env_vars: false
