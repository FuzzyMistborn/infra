---
target_os: ubuntu
hostname: endowment

### Install packages with grog.package
package_list:
  - name: curl
  - name: cifs-utils
  - name: fail2ban
  - name: git
  - name: htop
  - name: lm-sensors
  - name: net-tools
  - name: python
  - name: restic
  - name: rsyslog
  - name: sudo
  - name: wget

### Pip Packages
pip_packages:
  - thefuck

smb_mountpoints:
  - path: "/mnt/Media"
    source: "//192.168.1.10/Media"
    fs: cifs
    opts: "defaults,uid=1000,gid=1000,credentials=/home/{{ main_username }}/.smbcredentials"

pull_backup: false

### Bash Aliases

bash_docker: true
bash_autorestic: true
bash_systemctl: true
bash_apt: true

### Telegraf
telegraf_influx_token: "{{ secret_telegraf_endowment }}"
telegraf_influx_bucket: Endowment
telegraf_influx_docker: true

### Cronjobs
cronjobs:
  - name: Nextcloud
    job: /home/{{ main_username }}/scripts/nextcloud_cron.sh
    user: "{{ main_username }}"
    minute: '*/5'
  - name: Restart Jellyfin
    job: docker container restart jellyfin > /dev/null 2>&1
    user: "{{ main_username }}"
    hour: 2
    minute: 30
  - name: Restic Prune
    job: /usr/local/bin/runitor -uuid {{ secret_hc_restic_prune_endowment }} -- /usr/local/bin/autorestic exec -a -- forget --keep-daily 1 --keep-weekly 8 --keep-monthly 4 --prune
#    job: /usr/local/bin/runitor -uuid {{ secret_hc_restic_prune_endowment }} -- /usr/local/bin/autorestic forget -a -- prune
    user: "{{ main_username }}"
    minute: 30
    hour: 22
    weekday: 1
  - name: Restic Check
    job: /usr/local/bin/runitor -uuid {{ secret_hc_restic_check_endowment }} -- /usr/local/bin/autorestic exec -a -- check
    user: "{{ main_username }}"
    minute: 30
    hour: 2
    day: 1
  - name: Photo Reorg
    job: /usr/local/bin/runitor -uuid {{ secret_hc_photo_reorg }} -- /home/{{ main_username }}/scripts/photos.sh
    user: "{{ main_username }}"
    minute: 0
    hour: 3
  - name: Media Backup
    job: /usr/local/bin/runitor -uuid {{ secret_hc_restic_backup_endowment }} -- /usr/local/bin/autorestic backup -a -c /home/{{ main_username }}/.autorestic.yml
    user: root
    minute: 30
    hour: 0

### Autorestic Config
autorestic_config_yaml:
  version: 2
  backends:
    synology_docker:
      type: rest
      path: 'http://192.168.30.25:8500/endowment'
      key: "{{ secret_restic_repo_password }}"
      rest:
        user: "{{ secret_restic_rest_user }}"
        password: "{{ secret_restic_rest_password }}"
    b2_docker:
      type: b2
      path: "{{ secret_restic_b2_bucket }}:/endowment"
      key: "{{ secret_restic_repo_password }}"
      env:
        - B2_ACCOUNT_ID: "{{ secret_restic_b2_account_id }}"
        - B2_ACCOUNT_KEY: "{{ secret_restic_b2_account_key }}"
  locations:
    docker:
      from: '/home/{{ main_username }}/docker'
      to:
        - synology_docker
        - b2_docker
      options:
        backup:
          exclude:
            - 'transcodes'
        forget:
          keep-daily: 1
          keep-weekly: 8
          keep-monthly: 4

### Docker-Compose with ironicbadger.docker_compose_generator
appdata_path: "/home/{{ main_username }}/docker"
containers:
  ###
  - service_name: diun
    container_name: diun
    active: true
    image: crazymax/diun:4.25.0
    restart: always
    volumes:
      - "{{ appdata_path }}/diun/data:/data"
      - "{{ appdata_path }}/diun/config.yml:/diun.yml:ro"
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - LOG_LEVEL=info
      - LOG_JSON=false
    hostname: "{{ hostname }}"
    include_global_env_vars: true
  ###
  - service_name: radarr
    container_name: radarr
    active: true
    image: ghcr.io/linuxserver/radarr:4.7.5
    restart: always
    ports:
      - 7878:7878
    volumes:
      - "{{ appdata_path }}/radarr:/config"
      - /mnt/Media/Movies:/movies
      - /mnt/Media/Kids Movies:/kids_movies
      - /mnt/Media/Parents Movies:/parents_movies
      - "/mnt/scratch/complete:/downloads"
    include_global_env_vars: true
  ###
  - service_name: radarr_uhd
    container_name: radarr_uhd
    active: true
    image: ghcr.io/linuxserver/radarr:4.7.5
    restart: always
    ports:
      - 7879:7878
    volumes:
      - "{{ appdata_path }}/radarr_uhd:/config"
      - /mnt/Media/UHD:/uhd
      - "/mnt/scratch/complete:/downloads"
    include_global_env_vars: true
  ###
  - service_name: sonarr
    container_name: sonarr
    active: true
    image: ghcr.io/linuxserver/sonarr:3.0.10
    restart: always
    ports:
      - 8989:8989
    volumes:
      - "{{ appdata_path }}/sonarr:/config"
      - /mnt/Media/TV Shows:/tv
      - /mnt/Media/Kids TV:/kids_tv
      - /mnt/Media/Parents TV:/parents_tv
      - "/mnt/scratch/complete:/downloads"
    include_global_env_vars: true
  ###
  - service_name: prowlarr
    container_name: prowlarr
    active: true
    image: ghcr.io/linuxserver/prowlarr:1.7.4
    restart: always
    ports:
      - 9696:9696
    volumes:
      - "{{ appdata_path }}/prowlarr:/config"
    include_global_env_vars: true
  ###
  - service_name: jellyseerr
    container_name: jellyseerr
    active: true
    image: fallenbagel/jellyseerr:1.6.0
    restart: unless-stopped
    ports:
      - 5055:5055
    volumes:
      - "{{ appdata_path }}/jellyseerr/config:/app/config"
    include_global_env_vars: true
  ###
  - service_name: sabnzbd
    container_name: sabnzbd
    active: true
    image: ghcr.io/linuxserver/sabnzbd:4.0.3
    restart: always
    ports:
      - 8060:8080
      - 9080:9090
    volumes:
      - "{{ appdata_path }}/sabnzb:/config"
      - "/mnt/scratch/complete:/downloads"
      - "/mnt/scratch/incomplete:/incomplete-downloads"
    include_global_env_vars: true
  ###
  - service_name: nextcloud
    container_name: nextcloud
    active: true
    image: fuzzymistborn/nextcloud-docker:27.0.2
    restart: always
    ports:
      - 3491:80
      - 3492:443
    volumes:
      - "{{ appdata_path }}/nextcloud_docker/html:/var/www/html"
    mem_limit: 1000M
    include_global_env_vars: true
  ###
  - service_name: nextcloud-redis
    container_name: nextcloud-redis
    active: true
    image: redis:7.2.0
    restart: always
    include_global_env_vars: false
  ###
  - service_name: jellyfin
    container_name: jellyfin
    active: true
    image: ghcr.io/linuxserver/jellyfin:10.8.10
    restart: always
    ports:
      - 8096:8096
    volumes:
      - "{{ appdata_path }}/jellyfin/config:/config"
      - "/mnt/scratch/transcode:/transcode"
      - /mnt/Media/Movies:/mnt/movies:ro
      - /mnt/Media/UHD:/mnt/UHD:ro
      - /mnt/Media/Music:/mnt/music:ro
      - '/mnt/Media/TV Shows:/mnt/tv:ro'
      - '/mnt/Media/Kids Movies:/mnt/kids:ro'
      - '/mnt/Media/Kids TV:/mnt/kids_tv:ro'
      - '/mnt/Media/YouTube/Kids:/mnt/kids_youtube:ro'
      - '/mnt/Media/Parents Movies:/mnt/parents_movies:ro'
      - '/mnt/Media/Parents TV:/mnt/parents_tv:ro'
      - '/mnt/Media/Family Videos:/mnt/home_videos:ro'
    devices:
      - /dev/dri:/dev/dri
    group_add:
      - video
      - render
    include_global_env_vars: true
  ###
  - service_name: deemix
    container_name: deemix
    active: true
    image: registry.gitlab.com/bockiii/deemix-docker:latest
    restart: always
    ports:
      - 6595:6595
    volumes:
      - "{{ appdata_path }}/deemix/config:/config"
      - "/mnt/scratch/music:/downloads"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK_SET=022
    labels:
      - "diun.enable=true"
      - "diun.regopt=ghcr.io"
    include_global_env_vars: false
  ###
  - service_name: remote-api
    container_name: remote-api
    active: true
    image: kekru/docker-remote-api-tls:v0.4.0
    restart: always
    ports:
      - 2376:443
    volumes:
      - "{{ appdata_path }}/docker-api:/data/certs"
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - CREATE_CERTS_WITH_PW={{ secret_docker_api_tls }}
      - CERT_HOSTNAME=docker-remote.local
    include_global_env_vars: false
  ###
  - service_name: portainer_agent
    container_name: portainer_agent
    active: true
    image: portainer/agent:2.18.4
    restart: always
    ports:
      - 9001:9001
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    environment:
      - AGENT_SECRET={{ secret_portainer_key }}
    include_global_env_vars: false
