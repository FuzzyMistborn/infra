---
target_os: ubuntu
hostname: endowment

### Install packages with grog.package
package_list:
  - name: acl
  - name: curl
  - name: cifs-utils
  - name: git
  - name: htop
  - name: lm-sensors
  - name: net-tools
  - name: python
  - name: restic
  - name: sudo
  - name: wget

smb_mountpoints:
  - path: "/mnt/Media"
    source: "//192.168.1.10/Media"
    fs: cifs
    opts: "defaults,uid=1000,gid=1000,credentials=/home/{{ main_username }}/.smbcredentials"

pull_backup: false

### LNXLink
lnxlink_diskuse: true

### Bash Aliases
bash_docker: true
bash_autorestic: true
bash_systemctl: true
bash_apt: true

### Cronjobs
cronjobs:
  - name: Nextcloud
    job: /home/{{ main_username }}/scripts/nextcloud_cron.sh
    user: "{{ main_username }}"
    minute: '*/5'
  - name: Restart Jellyfin
    job: docker container restart jellyfin > /dev/null 2>&1
    user: "{{ main_username }}"
    hour: 2
    minute: 30
  - name: Restic Prune
    job: /usr/local/bin/runitor -uuid {{ secret_hc_restic_prune_endowment }} -- /usr/local/bin/autorestic forget -a -- prune
    user: "{{ main_username }}"
    minute: 30
    hour: 22
    weekday: 1
  - name: Restic Check
    job: /usr/local/bin/runitor -uuid {{ secret_hc_restic_check_endowment }} -- /usr/local/bin/autorestic exec -a -- check
    user: "{{ main_username }}"
    minute: 30
    hour: 2
    day: 1
  - name: Photo Reorg
    job: /usr/local/bin/runitor -uuid {{ secret_hc_photo_reorg }} -- /home/{{ main_username }}/scripts/photos.sh
    user: "{{ main_username }}"
    minute: 0
    hour: 3
  - name: Media Backup
    job: /usr/local/bin/runitor -uuid {{ secret_hc_restic_backup_endowment }} -- /usr/local/bin/autorestic backup -a -c /home/{{ main_username }}/.autorestic.yml
    user: root
    minute: 30
    hour: 0

### Autorestic Config
autorestic_config_user: "{{ main_username}}"
autorestic_user_directory: /home/"{{ main_username}}"
autorestic_run_check: false
autorestic_config_yaml:
  version: 2
  backends:
    local_docker:
      type: rest
      path: 'http://192.168.1.5:8500/endowment'
      key: "{{ secret_restic_repo_password }}"
      rest:
        user: "{{ secret_restic_rest_user }}"
        password: "{{ secret_restic_rest_password }}"
    b2_docker:
      type: b2
      path: "{{ secret_restic_b2_bucket }}:/endowment"
      key: "{{ secret_restic_repo_password }}"
      env:
        - B2_ACCOUNT_ID: "{{ secret_restic_b2_account_id }}"
        - B2_ACCOUNT_KEY: "{{ secret_restic_b2_account_key }}"
  locations:
    docker:
      from: '/home/{{ main_username }}/docker'
      to:
        - local_docker
        - b2_docker
      options:
        backup:
          exclude:
            - 'transcodes'
        forget:
          keep-daily: 1
          keep-weekly: 8
          keep-monthly: 4

### Docker-Compose with ironicbadger.docker_compose_generator
appdata_path: "/home/{{ main_username }}/docker"
containers:
  ###
  - service_name: radarr
    container_name: radarr
    active: true
    image: ghcr.io/linuxserver/radarr:5.16.3
    restart: always
    ports:
      - 7878:7878
    volumes:
      - "{{ appdata_path }}/radarr:/config"
      - /mnt/Media/Movies:/movies
      - /mnt/Media/Kids Movies:/kids_movies
      - /mnt/Media/Parents Movies:/parents_movies
      - "/mnt/scratch/complete:/downloads"
    include_global_env_vars: true
  ###
  - service_name: radarr_uhd
    container_name: radarr_uhd
    active: true
    image: ghcr.io/linuxserver/radarr:5.16.3
    restart: always
    ports:
      - 7879:7878
    volumes:
      - "{{ appdata_path }}/radarr_uhd:/config"
      - /mnt/Media/UHD:/uhd
      - "/mnt/scratch/complete:/downloads"
    include_global_env_vars: true
  ###
  - service_name: sonarr
    container_name: sonarr
    active: true
    image: ghcr.io/linuxserver/sonarr:4.0.11
    restart: always
    ports:
      - 8989:8989
    volumes:
      - "{{ appdata_path }}/sonarr:/config"
      - /mnt/Media/TV Shows:/tv
      - /mnt/Media/Kids TV:/kids_tv
      - /mnt/Media/Parents TV:/parents_tv
      - "/mnt/scratch/complete:/downloads"
    include_global_env_vars: true
  ###
  - service_name: prowlarr
    container_name: prowlarr
    active: true
    image: ghcr.io/linuxserver/prowlarr:1.28.2
    restart: always
    ports:
      - 9696:9696
    volumes:
      - "{{ appdata_path }}/prowlarr:/config"
    include_global_env_vars: true
  ###
  - service_name: readarr
    container_name: readarr
    active: true
    image: lscr.io/linuxserver/readarr:develop
    restart: unless-stopped
    ports:
      - 8787:8787
    volumes:
      - "{{ appdata_path }}/readarr/config:/config"
      - "/mnt/scratch/books:/downloads"
    include_global_env_vars: true
  ###
  - service_name: sabnzbd
    container_name: sabnzbd
    active: true
    image: ghcr.io/linuxserver/sabnzbd:4.4.1
    restart: always
    ports:
      - 8060:8080
      - 9080:9090
    volumes:
      - "{{ appdata_path }}/sabnzb:/config"
      - "/mnt/scratch/complete:/downloads"
      - "/mnt/scratch/incomplete:/incomplete-downloads"
    include_global_env_vars: true
  ###
  - service_name: audiobookshelf
    container_name: audiobookshelf
    active: true
    image: ghcr.io/advplyr/audiobookshelf:2.17.5
    restart: unless-stopped
    ports:
      - 13378:80
    volumes:
      - "{{ appdata_path }}/audiobookshelf/config:/config"
      - "{{ appdata_path }}/audiobookshelf/metadata:/metadata"
      - "/mnt/Media/Audiobooks:/audiobooks"
    include_global_env_vars: true
  ###
  - service_name: nextcloud
    container_name: nextcloud
    active: true
    image: fuzzymistborn/nextcloud-docker:30.0.4
    restart: always
    ports:
      - 3491:80
      - 3492:443
    volumes:
      - "{{ appdata_path }}/nextcloud_docker/html:/var/www/html"
    mem_limit: 1000M
    include_global_env_vars: true
  ###
  - service_name: nextcloud-redis
    container_name: nextcloud-redis
    active: true
    image: redis:7.4.1
    restart: always
    include_global_env_vars: false
  ###
  - service_name: jellyfin
    container_name: jellyfin
    active: true
    image: ghcr.io/linuxserver/jellyfin:10.10.3
    restart: always
    ports:
      - 8096:8096
    volumes:
      - "{{ appdata_path }}/jellyfin/config:/config"
      - "/mnt/scratch/transcode:/transcode"
      - /mnt/Media/Movies:/mnt/movies:ro
      - /mnt/Media/UHD:/mnt/UHD:ro
      - '/mnt/Media/TV Shows:/mnt/tv:ro'
      - '/mnt/Media/Kids Movies:/mnt/kids:ro'
      - '/mnt/Media/Kids TV:/mnt/kids_tv:ro'
      - '/mnt/Media/YouTube/Kids:/mnt/kids_youtube:ro'
      - '/mnt/Media/Parents Movies:/mnt/parents_movies:ro'
      - '/mnt/Media/Parents TV:/mnt/parents_tv:ro'
      - '/mnt/Media/Family Videos:/mnt/home_videos:ro'
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
    include_global_env_vars: true
  ###
  - service_name: navidrome
    container_name: navidrome
    active: true
    image: deluan/navidrome:0.53.3
    restart: unless-stopped
    user: 1000:1000
    ports:
      - 4533:4533
    volumes:
      - '{{ appdata_path }}/navidrome/data:/data'
      - /mnt/Media/Music:/music:ro
    environment:
      - ND_ENABLECOVERANIMATION=false
      - ND_SCANSCHEDULE=12h
      - ND_BASEURL=https://music.{{ secret_personal_internal_url }}
    include_global_env_vars: false
  ###
  - service_name: calibre-web-automated
    container_name: calibre-web-automated
    active: true
    image: crocodilestick/calibre-web-automated:V2.1.2
    restart: unless-stopped
    ports:
      - 8083:8083
    volumes:
      - "{{ appdata_path }}/calibre-web-automated:/config"
      - /mnt/Media/Ebooks/Calibre:/calibre-library
      - /mnt/Media/Ebooks/Import:/cwa-book-ingest
    environment:
      - DOCKER_MODS=linuxserver/mods:universal-calibre
    include_global_env_vars: true
  ###
  - service_name: southwest
    container_name: southwest
    active: true
    image: jdholtz/auto-southwest-check-in:v8.1
    restart: unless-stopped
    volumes:
      - "{{ appdata_path }}/southwest/config.json:/app/config.json"
    privileged: true
    include_global_env_vars: false
  ###
  - service_name: crowdsec
    container_name: crowdsec
    active: true
    image: crowdsecurity/crowdsec:v1.6.4
    restart: unless-stopped
    volumes:
      - "{{ appdata_path }}/crowdsec/data/acquis.yaml:/etc/crowdsec/acquis.yaml"
      - "{{ appdata_path }}/nextcloud_docker/html/data:/var/log/nextcloud:ro"
      - "{{ appdata_path }}/sonarr/logs:/var/log/sonarr:ro"
      - "{{ appdata_path }}/radarr/logs:/var/log/radarr:ro"
      - "{{ appdata_path }}/jellyfin/config/log/:/var/log/jellyfin:ro"
      - "{{ appdata_path }}/crowdsec/db:/var/lib/crowdsec/data/"
    environment:
      - COLLECTIONS=LePresidente/jellyfin schiz0phr3ne/sonarr schiz0phr3ne/radarr crowdsecurity/nextcloud
      - GID=1000
      - DISABLE_LOCAL_API=true
      - AGENT_USERNAME={{ hostname }}
      - AGENT_PASSWORD={{ secret_crowdsec_endowment_pw }}
      - LOCAL_API_URL=http://{{ secret_ambition_ip }}:8080
    include_global_env_vars: false
  ###
  - service_name: portainer_agent
    container_name: portainer_agent
    active: true
    image: portainer/agent:2.25.1
    restart: always
    ports:
      - 9001:9001
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    environment:
      - AGENT_SECRET={{ secret_portainer_key }}
    include_global_env_vars: false
