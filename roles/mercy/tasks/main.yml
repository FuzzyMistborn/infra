---

- name: create config directories
  file:
    path: /home/{{ main_username }}/{{ item }}
    state: directory
    owner: "{{ main_username }}"
    group: "{{ main_groupname }}"
  loop:
    - scripts
    - tg
    - '.local/share'

### Install TG bot
- name: Clone TG CLI GitHub Repo
  git:
    repo: https://github.com/kenorb-contrib/tg.git
    dest: /home/{{ main_username }}/tg
    accept_hostkey: true
    force: true
  become: yes

- name: Install requests python package
  pip:
    name:
      - requests
      - python-dateutil
      - pytz
      - parsedatetime
    executable: /usr/bin/pip3

- name: set TG folder permissions
  file:
    path: /home/{{ main_username }}/tg
    state: directory
    recurse: true
    owner: "{{ main_username }}"
    group: "{{ main_groupname }}"

- name: Make TG CLI
  shell: ./configure --enable-python && make
  args:
    chdir: "/home/{{main_username}}/tg"

### Install HO bot
- name: Clone HO Bot GitHub Repo
  git:
    repo: https://github.com/hangoutsbot/hangoutsbot.git
    dest: /home/{{ main_username }}/hangoutsbot
    accept_hostkey: true
    force: true

- name: set hangoutsbot folder permissions
  file:
    path: /home/{{ main_username }}/hangoutsbot
    state: directory
    recurse: true
    owner: "{{ main_username }}"
    group: "{{ main_groupname }}"

- name: Install Requirements
  command: pip3 install -r requirements.txt
  args:
    chdir: "/home/{{main_username}}/hangoutsbot"
  become: yes
  become_user: root

- name: Copy systemd service files
  template:
    src: "{{item.src}}"
    dest: /etc/systemd/system/{{item.dest}}
    owner: "{{ main_username }}"
    group: "{{ main_username }}"
    mode: 0644
  with_items:
    - {src: 'systemd/bar.service.j2', dest: 'bar.service'}
    - {src: 'systemd/math.service.j2', dest: 'math.service'}
    - {src: 'systemd/phantom.service.j2', dest: 'phantom.service'}
    - {src: 'systemd/tg-sync.service.j2', dest: 'tg-sync.service'}

- name: Copy scripts files
  template:
    src: "{{item.src}}"
    dest: /home/{{ main_username }}/{{item.dest}}
    owner: "{{ main_username }}"
    group: "{{ main_username }}"
    mode: +x
  with_items:
    - {src: 'scripts/RunBARBot.sh.j2', dest: 'scripts/RunBARBot.sh'}
    - {src: 'scripts/RunMATHBot.sh.j2', dest: 'scripts/RunMATHBot.sh'}
    - {src: 'scripts/RunPhantomBot.sh.j2', dest: 'scripts/RunPhantomBot.sh'}
    - {src: 'scripts/run.sh.j2', dest: 'scripts/run.sh'}
    - {src: 'scripts/tg_ho.py.j2', dest: 'scripts/tg_ho.py'}

### Backup Restore
- name: Create restore script
  copy:
    dest: /home/{{ main_username }}/restore.sh
    owner: "{{ main_username }}"
    group: "{{ main_username }}"
    mode: +x
    content: |
      #!/bin/bash
      /usr/local/bin/autorestic restore -f -l plugins --from synology_plugins --to /home/{{main_username}}/hangoutsbot/hangupsbot/plugins
      /usr/local/bin/autorestic restore -f -l local --from synology_local --to /home/{{main_username}}/.local/share/hangupsbot
      /usr/local/bin/autorestic restore -f -l telegram --from synology_telegram --to /home/{{main_username}}/
  when: pull_backup == true
- name: Run restore script
  command: /bin/bash ./restore.sh
  args:
    chdir: "/home/{{main_username}}"
  when: pull_backup == true
- name: Remove restore script
  file:
    path: /home/{{ main_username }}/restore.sh
    state: absent
  when: pull_backup == true

- name: Enable bot services
  systemd:
    enabled: true
    daemon-reload: true
    state: started
    name: "{{item}}"
  loop:
    - bar
    - phantom
    - math
    - tg-sync
