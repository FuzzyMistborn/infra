---
### RPM/DNF Changes
- name: Improve DNF Performances
  blockinfile:
    path: /etc/dnf/dnf.conf
    create: yes
    block: |
      [main]
      gpgcheck=1
      installonly_limit=3
      clean_requirements_on_remove=True
      best=False
      skip_if_unavailable=True
      fastestmirror=1
      max_parallel_downloads=10
      deltarpm=true
  become: yes

- name: Install the rpmfusion and fonts repo packages
  dnf:
    state: present
    disable_gpg_check: yes
    name:
      - https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_facts.distribution_version }}.noarch.rpm
      - https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_facts.distribution_version }}.noarch.rpm
  become: yes

- name: Remove unwanted packages
  ansible.builtin.dnf:
    name:
      - akregator
      - akonadi-import-wizard
      - dragon
      - elisa-player
      - grantlee-editor
      - kamoso
      - kaddressbook
      - khelpcenter
      - kmahjongg
      - kmail
      - kmail-account-wizard
      - kmines
      - kmouth
      - kontact
      - kontactinterface
      - korganizer
      - kpat
      - pim-data-exporter
      - pim-sieve-editor
      - plasma-welcome
      - neochat
    state: absent

### SSH Config
- name: Fix SFTP for Ansible
  lineinfile:
    dest: "/etc/ssh/sshd_config"
    state: present
    regexp: "Subsystem sftp*"
    line: "Subsystem sftp internal-sftp"

- name: Restart ssh
  service:
    name: sshd
    state: restarted

- name: create .ssh folder
  file:
    dest: /home/{{main_username}}/.ssh
    state: directory
    owner: "{{ main_username }}"
    group: "{{ main_username }}"
    mode: 0660

- name: Add SSH Keys
  copy:
    dest: /home/{{ main_username }}/.ssh/{{ item.dest }}
    owner: "{{ main_username }}"
    group: "{{ main_username }}"
    mode: 0600
    content: "{{ item.key }}"
  loop:
    - dest: desktop_lxcs
      key: "{{ secret_desktop_lxc_ssh }}"
    - dest: desktop_ambition
      key: "{{ secret_desktop_ambition_ssh }}"
    - dest: github
      key: "{{ secret_github_ssh }}"

- name: Copy template files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
    owner: "{{ main_username }}"
    group: "{{ main_username }}"
  loop:
    - {src: "ssh_config.j2", dest: "/home/{{ main_username }}/.ssh/config", mode: "600"}

### Sudoers file
- name: Add sudoers file for main user
  template:
    src: sudoers_main_user.j2
    dest: /etc/sudoers.d/{{ main_username }}
    owner: root
    group: root
    mode: 0440

### Packages
- name: Add VS Code repo
  become: true
  ansible.builtin.yum_repository:
    name: code
    description: Visual Studio Code repo
    file: vscode
    baseurl: https://packages.microsoft.com/yumrepos/vscode
    gpgkey: https://packages.microsoft.com/keys/microsoft.asc
    gpgcheck: true

- name: Add Tailscale Repo
  become: true
  ansible.builtin.command: dnf config-manager --add-repo https://pkgs.tailscale.com/stable/fedora/tailscale.repo
  args:
    creates: /etc/yum.repos.d/tailscale.repo

- name: Install packages
  become: true
  ansible.builtin.dnf:
    name: 
      - code
      - tailscale
      - https://launchpad.net/veracrypt/trunk/1.26.7/+download/veracrypt-1.26.7-CentOS-8-x86_64.rpm
    update_cache: true
    disable_gpg_check: true
    state: present

### AppImage
- name: Create directories
  ansible.builtin.file:
    dest: /home/{{ main_username }}/bin
    state: directory
    owner: "{{ main_username }}"
    group: "{{ main_groupname }}"
  loop:
    - .local/share/applications/

- name: Download MQTT Explorer AppImage
  ansible.builtin.get_url:
    url: https://github.com/thomasnordquist/MQTT-Explorer/releases/download/0.0.0-0.4.0-beta1/MQTT-Explorer-0.4.0-beta1.AppImage
    dest: /home/{{ main_username }}/.local/bin/MQTT_Explorer.AppImage
    owner: "{{ main_username }}"
    group: "{{ main_groupname }}"
    mode: 0744
    force: true

- name: Download MQTT Explorer icon to bin
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/thomasnordquist/MQTT-Explorer/master/icon.png
    dest: /home/{{ main_username }}/.local/bin/MQTT_Explorer.png
    owner: "{{ main_username }}"
    group: "{{ main_groupname }}"
    mode: 0644

- name: Create a .desktop file for MQTT Explorer
  ansible.builtin.template:
    src: templates/MQTT_Explorer.desktop.j2
    dest: /home/{{ main_username }}/.local/share/applications/MQTT_Explorer.desktop
    owner: "{{ main_username }}"
    group: "{{ main_groupname }}"
    mode: 0644
    force: true

### Flatpak
- name: Add the flathub flatpak repository remote
  community.general.flatpak_remote:
    name: flathub
    state: present
    flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
    method: system

- name: Install Flatpaks
  community.general.flatpak:
    name:
      - "{{ item.name }}"
    state: present
#    method: user
  loop: "{{ flatpak_list }}"

### LNXLink
- name: Install LnxLink
  command: pipx install lnxlink

- name: copy to /usr/local/bin
  copy:
    src: "/home/{{ main_username }}/.local/bin/lnxlink"
    dest: "/usr/local/bin"
    remote_src: yes

- name: Copy template files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
    owner: "{{ main_username }}"
    group: "{{ main_username }}"
  loop:
    - {src: "lnxlink_config.yaml.j2", dest: "/home/{{ main_username }}/.lnxlink_config.yaml", mode: "0644"}

### fstab/disk mounts
- name: make sure disks unmounted
  mount:
    path: "{{ item.path }}"
    state: unmounted
  loop: "{{ mountpoints }}"

- name: create /mnt points
  file:
    dest: "{{ item.path }}"
    state: directory
    owner: "{{ main_username }}"
    group: nobody
    mode: 0777
  loop: "{{ mountpoints }}"

- name: Add smbcredentials
  copy:
    dest: /home/{{ main_username }}/.smbcredentials
    owner: "{{ main_username }}"
    group: "{{ main_username }}"
    mode: 0600
    content: |
      user=samba
      password={{ secret_samba_pass }}
      domain=cosmere

- name: mount disks
  mount:
    path: "{{ item.path }}"
    src: "{{ item.source }}"
    fstype: "{{ item.fs }}"
    opts: "{{ item.opts }}"
    # change to 'mounted' to auto mount versus 'present' for just loaded into fstab
    state: present
  loop: "{{ mountpoints }}"

### ZSH
- name: Copy config files
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
    owner: "{{ main_username }}"
    group: "{{ main_username }}"
  loop:
    - src: "zsh/zshrc"
      dest: "/home/{{ main_username }}/.zshrc"
    - src: "zsh/p10k.zsh"
      dest: "/home/{{ main_username }}/.p10k.zsh"

### Backup/Restore
- name: Create restore script
  copy:
    dest: /home/{{ main_username }}/restore.sh
    owner: "{{ main_username }}"
    group: "{{ main_username }}"
    mode: +x
    content: |
      #!/bin/bash
      /usr/local/bin/autorestic restore -f -l home --from synology_docker --to /
  when: pull_backup == true
- name: Run restore script
  command: /bin/bash ./restore.sh
  args:
    chdir: "/home/{{ main_username }}"
  when: pull_backup == true
- name: Remove restore script
  file:
    path: /home/{{ main_username }}/restore.sh
    state: absent
  when: pull_backup == true

### VS Code Extensions
- name: Install extensions
  command: code --install-extension {{ item }}
  become: yes
  become_user: "{{ main_username }}"
  loop:
    - ms-vscode-remote.remote-ssh
    - ms-python.python
    - ms-azuretools.vscode-docker
    - matthewpi.caddyfile-support
    - keesschollaart.vscode-home-assistant
    - wholroyd.jinja

### CUPS
- name: Add printer and set as default
  command: "{{ item }}"
  become: yes
  become_user: "{{ main_username }}"
  loop:
    - /usr/sbin/lpadmin -p Brother-HL2270DW -E -v ipp://192.168.10.15/ipp/port1 -o media=na_letter_8.5x11in
    - /usr/bin/lpoptions -d Brother-HL2270DW

### MPV/KDEConnect
- name: get latest mpv-mpris release
  uri:
    url: https://api.github.com/repos/hoyon/mpv-mpris/releases/latest
    url_username: "{{ github_api_user | default (omit) }}"
    url_password: "{{ github_api_pass | default (omit) }}"
    return_content: true
    force_basic_auth: "{{ github_api_auth | default (omit) }}"
  register: release_version_registered

- name: set latest mpv-mpris version variable
  set_fact:
    mpris_ver: "{{ release_version_registered.json.tag_name }}"

- name: create mpv-mpris config folder
  file:
    dest: /home/{{main_username}}/.config/mpv
    state: directory
    owner: "{{ main_username }}"
    group: "{{ main_username }}"
    mode: 0660

- name: install mpv-mpris plugin
  get_url:
    url: https://github.com/hoyon/mpv-mpris/releases/download/{{ mpris_ver }}/mpris.so
    dest: /home/{{ main_username }}/.config/mpv/scripts
    force: yes
    owner: "{{ main_username }}"
    group: "{{ main_username }}"

### Final Tweaks
- name: Enable WOL
  command: nmcli c modify "Wired connection 1" 802-3-ethernet.wake-on-lan magic

- name: Set Hostname
  command: hostnamectl set-hostname {{ hostname }}

- name: Copy Personal avatar
  copy:
    src: face
    dest: /home/{{ main_username }}/.face
    mode: 0644
    owner: "{{ main_username }}"
    group: "{{ main_username }}"

- name: Copy login screen image
  copy:
    src: WayofKings.jpg
    dest: /usr/share/backgrounds/WayofKings.jpg
    mode: 0644
    owner: root
    group: root

- name: enable bluetooth auto-power on
  lineinfile:
    dest: "/etc/bluetooth/main.conf"
    state: present
    regexp: "^AutoEnable"
    line: "AutoEnable=true"

### Restic/LnxLink Finish
- name: Copy systemd service file
  template:
    src: ../templates//systemd/{{ item }}.j2
    dest: /etc/systemd/system/{{ item }}
    owner: root
    group: root
    mode: 0644
  loop:
    - restic_backup.service
    - restic_backup.timer
    - restic_prune.service
    - restic_prune.timer
    - lnxlink.service

- name: Reload systemd services/timers
  systemd:
    enabled: true
    daemon-reload: true
    state: started
    name: "{{ item }}"
    no_block: true
  loop:
    - restic_backup.service
    - restic_backup.timer
    - restic_prune.service
    - restic_prune.timer
    - lnxlink.service

### Logiops
- name: Copy Szeth logid.cfg file
  copy:
    src: szeth_logid.cfg
    dest: /etc/logid.cfg
    owner: root
    group: root
    mode: 0644
  when: ansible_hostname == 'szeth'

- name: Reload/Enable Systemd processes
  systemd:
    enabled: true
    daemon-reload: true
    state: restarted
    name: "{{ item }}"
  loop:
    - logid
  when: ansible_hostname == 'szeth'
