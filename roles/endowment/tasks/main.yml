---

- name: create directories
  file:
    path: "/home/{{main_username}}/{{ item }}"
    state: directory
    owner: "{{ main_username }}"
    group: "{{ main_groupname }}"
  loop:
    - docker
    - docker/diun
    - scripts

- name: Copy scripts
  copy:
    src: "{{item.path}}"
    dest: /home/{{ main_username }}/scripts/{{item.path}}
    owner: "{{ main_username }}"
    group: "{{ main_username }}"
    mode: "{{item.mode}}"
  with_items:
    - {path: "nextcloud_cron.sh", mode: "+x"}

- name: Copy photos script templates
  template:
    src: "{{item.src}}"
    dest: /home/{{ main_username }}/scripts/{{item.dest}}
    owner: "{{ main_username }}"
    group: "{{ main_username }}"
    mode: +x
  with_items:
    - {src: 'photos.sh.j2', dest: 'photos.sh'}

- name: Fix Jellyfin render group for iGPU passthrough
  shell: groupmod -g 150 postfix && groupmod -g 108 render && groupmod -g 107 postfix

#### DIUN
- name: Copy DIUN Config Template
  template:
    src: diun_config.yml.j2
    dest: /home/{{ main_username }}/docker/diun/config.yml
    owner: "{{ main_username }}"
    group: "{{ main_username }}"

#### Mount disks
- name: Set up disks/mounts
  include: disks.yml

### Backup Restore
- name: Create restore script
  copy:
    dest: /home/{{ main_username }}/restore.sh
    owner: "{{ main_username }}"
    group: "{{ main_username }}"
    mode: +x
    content: |
      #!/bin/bash
      /usr/local/bin/autorestic restore -f -l docker --from synology_docker --to /home/{{main_username}}/docker
  when: pull_backup == true
- name: Run restore script
  command: /bin/bash ./restore.sh
  args:
    chdir: "/home/{{main_username}}"
  when: pull_backup == true
- name: Remove restore script
  file:
    path: /home/{{ main_username }}/restore.sh
    state: absent
  when: pull_backup == true

#### Bash Alias

- name: Setup bash aliases
  lineinfile:
    dest: "/etc/bash_aliases"
    create: yes
    group: root
    line: "alias {{ item.alias }}='{{ item.command }}'"
    mode: 0644
    owner: root
    regexp: "^alias {{ item.alias }}="
  with_items:
    - {alias: "arsnapshot", command: "autorestic exec -av -- snapshots"}
    - {alias: "arbackup", command: "autorestic backup -a"}
    - {alias: "arprune", command: "autorestic forget -a -- prune"}

- name: Source aliases file
  lineinfile:
    dest: /etc/bash.bashrc
    line: 'source /etc/bash_aliases'
    state: present

### Rsyslog
- name: Copy rsyslog config templates
  template:
    src: "{{item.src}}"
    dest: /etc/{{item.dest}}
    owner: root
    group: root
    mode: 0644
  with_items:
    - {src: 'rsyslog.conf.j2', dest: 'rsyslog.conf'}
    - {src: 'endowment.conf.j2', dest: 'rsyslog.d/endowment.conf'}

- name: restart rsyslog service
  service:
    name: rsyslog
    enabled: 'true'
    state: restarted
