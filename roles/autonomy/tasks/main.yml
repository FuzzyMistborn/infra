---
- name: create config directories
  file:
    path: /home/{{ main_username }}/{{ item }}
    state: directory
    owner: "{{ main_username }}"
    group: "{{ main_groupname }}"
  loop:
    - .config/catt
    - docker
    - scripts

### SSH
- name: SSH Keys
  authorized_key:
    user: "{{ item.user }}"
    state: present
    key: "{{ item.ssh }}"
  loop:
    - {user: "{{ main_username }}", ssh: "{{ secret_main_user_code_server_ssh }}"}

#### Scripts

- name: Generate weather cast bash file
  copy:
    dest: /home/{{ main_username }}/scripts/cast_weather.sh
    owner: "{{ main_username }}"
    group: "{{ main_username }}"
    mode: +x
    content: "{{ secret_catt_weather }}"

- name: Create traffic cast bash file
  copy:
    dest: /home/{{ main_username }}/scripts/cast_traffic.sh
    owner: "{{ main_username }}"
    group: "{{ main_username }}"
    mode: +x
    content: "{{ secret_catt_traffic }}"

- name: Copy script templates
  template:
    src: "{{ item.src }}"
    dest: /home/{{ main_username }}/scripts/{{ item.dest }}
    owner: "{{ main_username }}"
    group: "{{ main_username }}"
    mode: +x
  loop:
    - {src: 'cast_frontdoor.sh.j2', dest: 'cast_frontdoor.sh'}
    - {src: 'docker.sh.j2', dest: 'docker.sh'}
    - {src: 'update_hass.sh.j2', dest: 'update_hass.sh'}
    - {src: 'google_traffic.py.j2', dest: 'google_traffic.py'}
    - {src: 'waze_daycare.py.j2', dest: 'waze_daycare.py'}
    - {src: 'waze_home.py.j2', dest: 'waze_home.py'}
    - {src: 'waze_live.py.j2', dest: 'waze_live.py'}

#### HASS Git

- name: Clone HASS GitHub Repo
  git:
    repo: git@github.com:FuzzyMistborn/hass-docker.git
    dest: /home/{{ main_username }}/hass_docker
    accept_hostkey: true
    key_file: /home/{{ main_username }}/.ssh/github
  when: clone_git == true

- name: Clone NodeRed GitHub Repo
  git:
    repo: git@github.com:FuzzyMistborn/hass-nodered.git
    dest: /home/{{ main_username }}/docker/nodered
    accept_hostkey: true
    key_file: /home/{{ main_username }}/.ssh/github
  when: clone_git == true

### Backup Restore
- name: Create restore script
  copy:
    dest: /home/{{ main_username }}/restore.sh
    owner: "{{ main_username }}"
    group: "{{ main_username }}"
    mode: +x
    content: |
      #!/bin/bash
      /usr/local/bin/autorestic restore -f -l docker --from local_docker --to /
      /usr/local/bin/autorestic restore -f -l hass_docker --from local_hass_docker --to /
      /usr/local/bin/autorestic restore -f -l hass_docker_beta --from local_hass_docker_beta --to /
  when: pull_backup == true
- name: Run restore script
  command: /bin/bash ./restore.sh
  args:
    chdir: "/home/{{ main_username }}"
  when: pull_backup == true
- name: Remove restore script
  file:
    path: /home/{{ main_username }}/restore.sh
    state: absent
  when: pull_backup == true

### Pip Virtualenv
- name: Install selenium/splinter
  ansible.builtin.pip:
    name:
      - splinter
      - selenium
    virtualenv: .venv
