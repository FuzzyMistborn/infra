---

- name: check whether restic installed
  find:
    paths: /usr/bin
    patterns: restic
  register: is_installed

- name: install restic binary?
  set_fact:
    force_install: "{{ is_installed.matched == 0 }}"

- name: update restic binary?
  set_fact:
    update_binary: "{{ restic_ver is undefined and is_installed.matched == 1 }}"

- name: Update restic to latest version
  command: "/usr/bin/restic self-update"
  when: update_binary == True
  register: update
  changed_when: "'restic is up to date' not in update.stdout_lines"

- name: get latest restic release
  uri:
    url: https://api.github.com/repos/restic/restic/releases/latest
    return_content: true
  register: release_latest
  when: restic_ver is undefined and force_install == True

- name: set restic version if not already
  set_fact: restic_ver="{{ release_latest.json.tag_name }}"
  when: restic_ver is undefined and force_install == True

- name: download restic release
  get_url:
      url: https://github.com/restic/restic/releases/download/{{restic_ver}}/restic_{{restic_ver | regex_replace('v')}}_linux_amd64.bz2
      dest: /tmp
      force: yes
      owner: "{{main_username}}"
      group: "{{main_username}}"
      mode: +x
  when: force_install == True

- name: set restic filename
  set_fact: file_name="restic_{{ restic_ver | regex_replace('v')}}_linux_amd64.bz2"
  when: force_install == True

- name: Unzip restic release
  shell: "cd /tmp && bzip2 -d {{ file_name }} && mv {{ file_name | regex_replace('.bz2') }} /usr/bin/restic"
  when: force_install == True